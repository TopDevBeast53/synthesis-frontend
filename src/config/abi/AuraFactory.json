{
  "contractName": "AuraFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_devFee",
          "type": "uint8"
        }
      ],
      "name": "setDevFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_swapFee",
          "type": "uint32"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_devFee\",\"type\":\"uint8\"}],\"name\":\"setDevFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_swapFee\",\"type\":\"uint32\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/swaps/AuraFactory.sol\":\"AuraFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xfaad496c1c944b6259b7dc70b4865eb1775d6402bc0c81b38a0b24d9f525ae37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f60ddc4639589b1d7a87cd647561be4c71ddf9a9dcf55f38db75e24ef1f6c5b\",\"dweb:/ipfs/QmTocvyQx3DPrzsFePtrhDGM6eYxUh3v8iBN3D59yoeuBt\"]},\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899\",\"dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr\"]},\"@rari-capital/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x37da48458a348878d8db5b58367d734e340b9172ef947df430027638fc45a015\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://665cc22c86db049785843b49741e6c8f3356ec4c00c5e8a77a65f24238e1cfed\",\"dweb:/ipfs/QmVtU93ya9nFc23w5m2ADGo5np6zB3JCofT6GeV8r82Kw2\"]},\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x0920a26df9837a073c6b24c4e2542d9409c173748e0c6728a1ae39ce5c368899\",\"urls\":[\"bzz-raw://46c191c0fc6452e0c1c75725b4f577309cc20f081f85a1d10f706d0d9127297e\",\"dweb:/ipfs/QmVuExKwURcyQVax2YDKZqYZELwjNQ4KRyLnKwvHD8rz44\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"project:/contracts/interfaces/IAuraCallee.sol\":{\"keccak256\":\"0xb0e7a0f55e1ca960284405a41326ecc02bcd71afe98b27fdaf9950f91d73b0ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb53c4b9ad43be69968b1d7cab71376c863dfc91e31eeceb3257f214b6d2d59\",\"dweb:/ipfs/QmZkL28acPxJAwTXWeU9oaFooABzX3n93AVYZhUhqRsCmE\"]},\"project:/contracts/libraries/ExtraMath.sol\":{\"keccak256\":\"0x3eabcba8174a45df3a3fb07d6493c1b4ddd089271082573d8f10fc641d813e87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f305fa4e0e4880a0a77d09d6bfcd041975cbe4643eb58ec545eeef9e5f47409\",\"dweb:/ipfs/QmQgXyaSYLDEtLG58LaKnWiRMXh5kkn9gYhKBiFZ6mXojF\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0xaba95f700a80cb4e9d6e757c888836c73ede2ba585acee388d876e7fdd5f8c61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46dd3cdf81f3305f97e633dc830c3886f92388c7fa5a05c21830e588879a685d\",\"dweb:/ipfs/QmTVVocc4sHeMb5AuHR2iY8eMiNEc5q7fqvmFDygsGNpVn\"]},\"project:/contracts/swaps/AuraFactory.sol\":{\"keccak256\":\"0x4b715ed80b2ce40f0b9b40e90064797527d89c3097dc0a6be5132433537d1b99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6d7c55c9f2951c7a9fc47378efc9102c810015fd4692533de870a9a6eda56c\",\"dweb:/ipfs/QmWtUnCLfQp2oZx7ETAGRn19RzxAjEHDHKrUBtAfns6mct\"]},\"project:/contracts/swaps/AuraPair.sol\":{\"keccak256\":\"0x21979dcb214508799c6c198ca819449b7a6a47012125f48233d951749121ec76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351ef85fece16e09ffb03a0ca89977c591f8d233e0912d78194d7d0ab667a4b9\",\"dweb:/ipfs/QmSFw2r2arWQv77aET7xBbdytQaTk7pXrEwyv4J991pY8K\"]},\"project:/contracts/tokens/AuraLP.sol\":{\"keccak256\":\"0xbb966b31525ef360b7d81b9bf6df63af79cace8dad5d15244ebb07c3c1612a4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ba630821d22239e310d38177c1674d40252946353d3c5e07e8dcbc96eb3d7b\",\"dweb:/ipfs/QmeDer8Z6QtJUS2NqiYA8S2b27JubL9PYxmbR2wgPsKeYC\"]}},\"version\":1}",
  "bytecode": "0x6080604081905261001060a061009b565b601f1982820381018352601f90910116604081905261003291906020016100a8565b6040516020818303038152906040528051906020012060025534801561005757600080fd5b50604051615c02380380615c02833981016040819052610076916100e3565b600180546001600160a01b0319166001600160a01b0392909216919091179055610113565b61293c806132c683390190565b6000825160005b818110156100c957602081860181015185830152016100af565b818111156100d8576000828501525b509190910192915050565b6000602082840312156100f557600080fd5b81516001600160a01b038116811461010c57600080fd5b9392505050565b6131a4806101226000396000f3fe60806040523480156200001157600080fd5b5060043610620000b75760003560e01c80639e68ceb8116200007a5780639e68ceb8146200013a578063a2e74af61462000153578063c9c65396146200016a578063e6a439051462000181578063ef0bc99314620001b8578063f46901ed14620001cf57600080fd5b8063017e7e5814620000bc578063094b741514620000ed5780631e3dd18b1462000101578063257671f51462000118578063574f2ba31462000131575b600080fd5b600054620000d0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600154620000d0906001600160a01b031681565b620000d062000112366004620006fb565b620001e6565b6200012260025481565b604051908152602001620000e4565b60045462000122565b620001516200014b36600462000732565b62000211565b005b620001516200016436600462000776565b620002ad565b620000d06200017b3660046200079b565b620002fc565b620000d0620001923660046200079b565b60036020908152600092835260408084209091529082529020546001600160a01b031681565b62000151620001c9366004620007d3565b620005f7565b62000151620001e036600462000776565b6200069e565b60048181548110620001f757600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b03163314620002475760405162461bcd60e51b81526004016200023e9062000809565b60405180910390fd5b60405163d6d788c360e01b815263ffffffff821660048201526001600160a01b0383169063d6d788c3906024015b600060405180830381600087803b1580156200029057600080fd5b505af1158015620002a5573d6000803e3d6000fd5b505050505050565b6001546001600160a01b03163314620002da5760405162461bcd60e51b81526004016200023e9062000809565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b03161415620003625760405162461bcd60e51b815260206004820152601960248201527f417572613a204944454e544943414c5f4144445245535345530000000000000060448201526064016200023e565b600080836001600160a01b0316856001600160a01b031610620003875783856200038a565b84845b90925090506001600160a01b038216620003dc5760405162461bcd60e51b8152602060048201526012602482015271417572613a205a45524f5f4144445245535360701b60448201526064016200023e565b6001600160a01b03828116600090815260036020908152604080832085851684529091529020541615620004475760405162461bcd60e51b8152602060048201526011602482015270417572613a20504149525f45584953545360781b60448201526064016200023e565b6000604051806020016200045b90620006ed565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156200050e57600080fd5b505af115801562000523573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526003602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b03163314620006245760405162461bcd60e51b81526004016200023e9062000809565b60008160ff16116200066f5760405162461bcd60e51b8152602060048201526013602482015272417572613a20464f5242494444454e5f46454560681b60448201526064016200023e565b604051623c150b60e41b815260ff821660048201526001600160a01b038316906303c150b09060240162000275565b6001546001600160a01b03163314620006cb5760405162461bcd60e51b81526004016200023e9062000809565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61293c806200083383390190565b6000602082840312156200070e57600080fd5b5035919050565b80356001600160a01b03811681146200072d57600080fd5b919050565b600080604083850312156200074657600080fd5b620007518362000715565b9150602083013563ffffffff811681146200076b57600080fd5b809150509250929050565b6000602082840312156200078957600080fd5b620007948262000715565b9392505050565b60008060408385031215620007af57600080fd5b620007ba8362000715565b9150620007ca6020840162000715565b90509250929050565b60008060408385031215620007e757600080fd5b620007f28362000715565b9150602083013560ff811681146200076b57600080fd5b6020808252600f908201526e20bab9309d102327a92124a22222a760891b60408201526060019056fe60e06040526001600655600e80546001600160401b0319166405000000021790553480156200002d57600080fd5b50604080518082018252600881526741757261204c507360c01b6020808301918252835180850190945260078452660415552412d4c560cc1b90840152815191929160129162000081916000919062000167565b5081516200009790600190602085019062000167565b5060ff81166080524660a052620000ad620000cb565b60c0525050600780546001600160a01b0319163317905550620002ee565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ff91906200024a565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b82805462000175906200020d565b90600052602060002090601f016020900481019282620001995760008555620001e4565b82601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b5b80821115620001f25760008155600101620001f7565b600181811c908216806200022257607f821691505b602082108114156200024457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200026757607f831692505b60208084108214156200028857634e487b7160e01b86526022600452602486fd5b8180156200029f5760018114620002b157620002e0565b60ff19861689528489019650620002e0565b60008a81526020902060005b86811015620002d85781548b820152908501908301620002bd565b505084890196505b509498975050505050505050565b60805160a05160c05161261e6200031e6000396000610d5901526000610d2401526000610313015261261e6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636827e7641161010f578063ba9a7a56116100a2578063d505accf11610071578063d505accf146104b8578063d6d788c3146104cb578063dd62ed3e146104de578063fff6cae91461050957600080fd5b8063ba9a7a5614610476578063bc25cf771461047f578063c45a015514610492578063d21220a7146104a557600080fd5b80637ecebe00116100de5780637ecebe001461041357806389afcb441461043357806395d89b411461045b578063a9059cbb1461046357600080fd5b80636827e764146103bf5780636a627842146103d757806370a08231146103ea5780637464fc3d1461040a57600080fd5b806330adf81f1161018757806354cf2aeb1161015657806354cf2aeb146103625780635909c0d5146103875780635a3d5493146103905780635e07a0991461039957600080fd5b806330adf81f146102e7578063313ce5671461030e5780633644e51514610347578063485cc9551461034f57600080fd5b8063095ea7b3116101c3578063095ea7b31461026f5780630dfe16811461029257806318160ddd146102bd57806323b872dd146102d457600080fd5b8063022c0d9f146101f557806303c150b01461020a57806306fdde031461021d5780630902f1ac1461023b575b600080fd5b61020861020336600461209e565b610511565b005b610208610218366004612134565b610a03565b610225610b1c565b604051610232919061218a565b60405180910390f35b610243610baa565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610232565b61028261027d3660046121bd565b610bd4565b6040519015158152602001610232565b6008546102a5906001600160a01b031681565b6040516001600160a01b039091168152602001610232565b6102c660025481565b604051908152602001610232565b6102826102e23660046121e9565b610c40565b6102c67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6103357f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610232565b6102c6610d20565b61020861035d36600461222a565b610d7b565b600e546103729063ffffffff1681565b60405163ffffffff9091168152602001610232565b6102c6600b5481565b6102c6600c5481565b6103a76001600160701b0381565b6040516001600160701b039091168152602001610232565b600e5461037290640100000000900463ffffffff1681565b6102c66103e5366004612263565b610df4565b6102c66103f8366004612263565b60036020526000908152604090205481565b6102c6600d5481565b6102c6610421366004612263565b60056020526000908152604090205481565b610446610441366004612263565b6110b9565b60408051928352602083019190915201610232565b610225611418565b6102826104713660046121bd565b611425565b6102c66103e881565b61020861048d366004612263565b61148b565b6007546102a5906001600160a01b031681565b6009546102a5906001600160a01b031681565b6102086104c6366004612280565b61159e565b6102086104d9366004612134565b6117ef565b6102c66104ec36600461222a565b600460209081526000928352604080842090915290825290205481565b6102086118fc565b60065460011461053c5760405162461bcd60e51b8152600401610533906122f7565b60405180910390fd5b60026006558415158061054f5750600084115b61059b5760405162461bcd60e51b815260206004820152601f60248201527f4175726120494e53554646494349454e545f4f55545055545f414d4f554e54006044820152606401610533565b6000806105a6610baa565b5091509150816001600160701b0316871080156105cb5750806001600160701b031686105b6106175760405162461bcd60e51b815260206004820152601b60248201527f4175726120494e53554646494349454e545f4c495155494449545900000000006044820152606401610533565b60085460095460009182916001600160a01b039182169190811690891682148015906106555750806001600160a01b0316896001600160a01b031614155b6106935760405162461bcd60e51b815260206004820152600f60248201526e4175726120494e56414c49445f544f60881b6044820152606401610533565b8a156106a4576106a4828a8d611a20565b89156106b5576106b5818a8c611a20565b8615610722576040516329b6c68560e21b81526001600160a01b038a169063a6db1a14906106ef9033908f908f908e908e9060040161231b565b600060405180830381600087803b15801561070957600080fd5b505af115801561071d573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a9190612367565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa1580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f59190612367565b92505050600089856001600160701b03166108109190612396565b831161081d57600061083a565b6108308a6001600160701b038716612396565b61083a9084612396565b905060006108518a6001600160701b038716612396565b831161085e57600061087b565b6108718a6001600160701b038716612396565b61087b9084612396565b9050600082118061088c5750600081115b6108d85760405162461bcd60e51b815260206004820152601e60248201527f4175726120494e53554646494349454e545f494e5055545f414d4f554e5400006044820152606401610533565b600e5463ffffffff1660006108ed82856123ad565b6108f9876103e86123ad565b6109039190612396565b9050600061091183856123ad565b61091d876103e86123ad565b6109279190612396565b905061093f6001600160701b03808a16908b166123ad565b61094c90620f42406123ad565b61095682846123ad565b101561098d5760405162461bcd60e51b815260206004820152600660248201526541757261204b60d01b6044820152606401610533565b50505061099c84848888611b3b565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600655505050505050505050565b60008163ffffffff1611610a525760405162461bcd60e51b8152602060048201526016602482015275041757261506169723a206c6f776572207468656e20360541b6044820152606401610533565b6007546001600160a01b03163314610aa25760405162461bcd60e51b815260206004820152601360248201527220bab930a830b4b91d102327a92124a22222a760691b6044820152606401610533565b6101f48163ffffffff161115610af45760405162461bcd60e51b815260206004820152601760248201527641757261506169723a20464f5242494444454e5f46454560481b6044820152606401610533565b600e805463ffffffff9092166401000000000267ffffffff0000000019909216919091179055565b60008054610b29906123cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b55906123cc565b8015610ba25780601f10610b7757610100808354040283529160200191610ba2565b820191906000526020600020905b815481529060010190602001808311610b8557829003601f168201915b505050505081565b600a546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610c2f9086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610c9c57610c778382612396565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610cc4908490612396565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206125c983398151915290610d0d9087815260200190565b60405180910390a3506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610d5657610d51611d22565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6007546001600160a01b03163314610dc65760405162461bcd60e51b815260206004820152600e60248201526d20bab930902327a92124a22222a760911b6044820152606401610533565b600880546001600160a01b039384166001600160a01b03199182161790915560098054929093169116179055565b6000600654600114610e185760405162461bcd60e51b8152600401610533906122f7565b6002600655600080610e28610baa565b506008546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9e9190612367565b6009546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f109190612367565b90506000610f276001600160701b03861684612396565b90506000610f3e6001600160701b03861684612396565b90506000610f4c8787611dbc565b60025490915080610f8a576103e8610f6c610f6785876123ad565b611f0e565b610f769190612396565b9850610f8560006103e8611f7e565b610fd1565b610fce6001600160701b038916610fa183876123ad565b610fab9190612417565b6001600160701b038916610fbf84876123ad565b610fc99190612417565b611fd8565b98505b6000891161102c5760405162461bcd60e51b815260206004820152602260248201527f4175726120494e53554646494349454e545f4c49515549444954595f4d494e54604482015261115160f21b6064820152608401610533565b6110368a8a611f7e565b61104286868a8a611b3b565b811561106b57600a54611067906001600160701b03600160701b8204811691166123ad565b600d555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a25050600160065550949695505050505050565b6000806006546001146110de5760405162461bcd60e51b8152600401610533906122f7565b60026006556000806110ee610baa565b506008546009546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c9190612367565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156111b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111da9190612367565b306000908152600360205260408120549192506111f78888611dbc565b6002549091508061120886856123ad565b6112129190612417565b9a508061121f85856123ad565b6112299190612417565b995060008b11801561123b575060008a115b6112925760405162461bcd60e51b815260206004820152602260248201527f4175726120494e53554646494349454e545f4c49515549444954595f4255524e604482015261115160f21b6064820152608401610533565b61129c3084611ff0565b6112a7878d8d611a20565b6112b2868d8c611a20565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa1580156112f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131a9190612367565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa158015611361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113859190612367565b935061139385858b8b611b3b565b81156113bc57600a546113b8906001600160701b03600160701b8204811691166123ad565b600d555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600681905550915091565b60018054610b29906123cc565b33600090815260036020526040812080548391908390611446908490612396565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206125c983398151915290610c2f9086815260200190565b6006546001146114ad5760405162461bcd60e51b8152600401610533906122f7565b6002600655600854600954600a546040516370a0823160e01b81523060048201526001600160a01b03938416939092169161154c91849186916001600160701b03169083906370a08231906024015b602060405180830381865afa158015611519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153d9190612367565b6115479190612396565b611a20565b600a546040516370a0823160e01b81523060048201526115949183918691600160701b90046001600160701b0316906001600160a01b038416906370a08231906024016114fc565b5050600160065550565b428410156115ee5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610533565b60006115f8610d20565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611711573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117475750886001600160a01b0316816001600160a01b0316145b6117845760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610533565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60008163ffffffff161161183e5760405162461bcd60e51b8152602060048201526016602482015275041757261506169723a206c6f776572207468656e20360541b6044820152606401610533565b6007546001600160a01b0316331461188e5760405162461bcd60e51b815260206004820152601360248201527220bab930a830b4b91d102327a92124a22222a760691b6044820152606401610533565b6103e88163ffffffff1611156118e05760405162461bcd60e51b815260206004820152601760248201527641757261506169723a20464f5242494444454e5f46454560481b6044820152606401610533565b600e805463ffffffff191663ffffffff92909216919091179055565b60065460011461191e5760405162461bcd60e51b8152600401610533906122f7565b60026006556008546040516370a0823160e01b8152306004820152611a19916001600160a01b0316906370a0823190602401602060405180830381865afa15801561196d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119919190612367565b6009546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156119d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fd9190612367565b600a546001600160701b0380821691600160701b900416611b3b565b6001600655565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611a7c919061242b565b6000604051808303816000865af19150503d8060008114611ab9576040519150601f19603f3d011682016040523d82523d6000602084013e611abe565b606091505b5091509150818015611ae8575080511580611ae8575080806020019051810190611ae89190612447565b611b345760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606401610533565b5050505050565b6001600160701b038411801590611b5957506001600160701b038311155b611b965760405162461bcd60e51b815260206004820152600e60248201526d417572613a204f564552464c4f5760901b6044820152606401610533565b6000611ba764010000000042612469565b600a54909150600090611bc790600160e01b900463ffffffff168361247d565b905060008163ffffffff16118015611be757506001600160701b03841615155b8015611bfb57506001600160701b03831615155b15611c8a578063ffffffff16611c2385611c1486612052565b6001600160e01b031690612071565b6001600160e01b0316611c3691906123ad565b600b6000828254611c4791906124a2565b909155505063ffffffff8116611c6084611c1487612052565b6001600160e01b0316611c7391906123ad565b600c6000828254611c8491906124a2565b90915550505b600a805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611d5491906124ba565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e369190612556565b600d546001600160a01b038216158015945091925090611efa578015611ef5576000611e71610f676001600160701b038088169089166123ad565b90506000611e7e83611f0e565b905080821115611ef2576000611e948284612396565b600254611ea191906123ad565b600e549091506000908390611ec490640100000000900463ffffffff16866123ad565b611ece91906124a2565b90506000611edc8284612417565b90508015611eee57611eee8782611f7e565b5050505b50505b611f06565b8015611f06576000600d555b505092915050565b60006003821115611f6f5750806000611f28600283612417565b611f339060016124a2565b90505b81811015611f6957905080600281611f4e8186612417565b611f5891906124a2565b611f629190612417565b9050611f36565b50919050565b8115611f79575060015b919050565b8060026000828254611f9091906124a2565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206125c983398151915291015b60405180910390a35050565b6000818310611fe75781611fe9565b825b9392505050565b6001600160a01b03821660009081526003602052604081208054839290612018908490612396565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206125c983398151915290602001611fcc565b600061206b600160701b6001600160701b038416612573565b92915050565b6000611fe96001600160701b038316846125a2565b6001600160a01b038116811461209b57600080fd5b50565b6000806000806000608086880312156120b657600080fd5b853594506020860135935060408601356120cf81612086565b9250606086013567ffffffffffffffff808211156120ec57600080fd5b818801915088601f83011261210057600080fd5b81358181111561210f57600080fd5b89602082850101111561212157600080fd5b9699959850939650602001949392505050565b60006020828403121561214657600080fd5b813563ffffffff81168114611fe957600080fd5b60005b8381101561217557818101518382015260200161215d565b83811115612184576000848401525b50505050565b60208152600082518060208401526121a981604085016020870161215a565b601f01601f19169190910160400192915050565b600080604083850312156121d057600080fd5b82356121db81612086565b946020939093013593505050565b6000806000606084860312156121fe57600080fd5b833561220981612086565b9250602084013561221981612086565b929592945050506040919091013590565b6000806040838503121561223d57600080fd5b823561224881612086565b9150602083013561225881612086565b809150509250929050565b60006020828403121561227557600080fd5b8135611fe981612086565b600080600080600080600060e0888a03121561229b57600080fd5b87356122a681612086565b965060208801356122b681612086565b95506040880135945060608801359350608088013560ff811681146122da57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60006020828403121561237957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156123a8576123a8612380565b500390565b60008160001904831182151516156123c7576123c7612380565b500290565b600181811c908216806123e057607f821691505b60208210811415611f6957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261242657612426612401565b500490565b6000825161243d81846020870161215a565b9190910192915050565b60006020828403121561245957600080fd5b81518015158114611fe957600080fd5b60008261247857612478612401565b500690565b600063ffffffff8381169083168181101561249a5761249a612380565b039392505050565b600082198211156124b5576124b5612380565b500190565b600080835481600182811c9150808316806124d657607f831692505b60208084108214156124f657634e487b7160e01b86526022600452602486fd5b81801561250a576001811461251b57612548565b60ff19861689528489019650612548565b60008a81526020902060005b868110156125405781548b820152908501908301612527565b505084890196505b509498975050505050505050565b60006020828403121561256857600080fd5b8151611fe981612086565b60006001600160e01b038281168482168115158284048211161561259957612599612380565b02949350505050565b60006001600160e01b03838116806125bc576125bc612401565b9216919091049291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212207670c2222a58d6f2c0e423ff108dadcc6b9cad5f55e00c230dc2ab2a6c4aa70664736f6c634300080a0033a264697066735822122030a75e475568f40596b218f5329a5498eacbcf5687a51d2dae074de75f7fb16964736f6c634300080a003360e06040526001600655600e80546001600160401b0319166405000000021790553480156200002d57600080fd5b50604080518082018252600881526741757261204c507360c01b6020808301918252835180850190945260078452660415552412d4c560cc1b90840152815191929160129162000081916000919062000167565b5081516200009790600190602085019062000167565b5060ff81166080524660a052620000ad620000cb565b60c0525050600780546001600160a01b0319163317905550620002ee565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ff91906200024a565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b82805462000175906200020d565b90600052602060002090601f016020900481019282620001995760008555620001e4565b82601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b5b80821115620001f25760008155600101620001f7565b600181811c908216806200022257607f821691505b602082108114156200024457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200026757607f831692505b60208084108214156200028857634e487b7160e01b86526022600452602486fd5b8180156200029f5760018114620002b157620002e0565b60ff19861689528489019650620002e0565b60008a81526020902060005b86811015620002d85781548b820152908501908301620002bd565b505084890196505b509498975050505050505050565b60805160a05160c05161261e6200031e6000396000610d5901526000610d2401526000610313015261261e6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636827e7641161010f578063ba9a7a56116100a2578063d505accf11610071578063d505accf146104b8578063d6d788c3146104cb578063dd62ed3e146104de578063fff6cae91461050957600080fd5b8063ba9a7a5614610476578063bc25cf771461047f578063c45a015514610492578063d21220a7146104a557600080fd5b80637ecebe00116100de5780637ecebe001461041357806389afcb441461043357806395d89b411461045b578063a9059cbb1461046357600080fd5b80636827e764146103bf5780636a627842146103d757806370a08231146103ea5780637464fc3d1461040a57600080fd5b806330adf81f1161018757806354cf2aeb1161015657806354cf2aeb146103625780635909c0d5146103875780635a3d5493146103905780635e07a0991461039957600080fd5b806330adf81f146102e7578063313ce5671461030e5780633644e51514610347578063485cc9551461034f57600080fd5b8063095ea7b3116101c3578063095ea7b31461026f5780630dfe16811461029257806318160ddd146102bd57806323b872dd146102d457600080fd5b8063022c0d9f146101f557806303c150b01461020a57806306fdde031461021d5780630902f1ac1461023b575b600080fd5b61020861020336600461209e565b610511565b005b610208610218366004612134565b610a03565b610225610b1c565b604051610232919061218a565b60405180910390f35b610243610baa565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610232565b61028261027d3660046121bd565b610bd4565b6040519015158152602001610232565b6008546102a5906001600160a01b031681565b6040516001600160a01b039091168152602001610232565b6102c660025481565b604051908152602001610232565b6102826102e23660046121e9565b610c40565b6102c67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6103357f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610232565b6102c6610d20565b61020861035d36600461222a565b610d7b565b600e546103729063ffffffff1681565b60405163ffffffff9091168152602001610232565b6102c6600b5481565b6102c6600c5481565b6103a76001600160701b0381565b6040516001600160701b039091168152602001610232565b600e5461037290640100000000900463ffffffff1681565b6102c66103e5366004612263565b610df4565b6102c66103f8366004612263565b60036020526000908152604090205481565b6102c6600d5481565b6102c6610421366004612263565b60056020526000908152604090205481565b610446610441366004612263565b6110b9565b60408051928352602083019190915201610232565b610225611418565b6102826104713660046121bd565b611425565b6102c66103e881565b61020861048d366004612263565b61148b565b6007546102a5906001600160a01b031681565b6009546102a5906001600160a01b031681565b6102086104c6366004612280565b61159e565b6102086104d9366004612134565b6117ef565b6102c66104ec36600461222a565b600460209081526000928352604080842090915290825290205481565b6102086118fc565b60065460011461053c5760405162461bcd60e51b8152600401610533906122f7565b60405180910390fd5b60026006558415158061054f5750600084115b61059b5760405162461bcd60e51b815260206004820152601f60248201527f4175726120494e53554646494349454e545f4f55545055545f414d4f554e54006044820152606401610533565b6000806105a6610baa565b5091509150816001600160701b0316871080156105cb5750806001600160701b031686105b6106175760405162461bcd60e51b815260206004820152601b60248201527f4175726120494e53554646494349454e545f4c495155494449545900000000006044820152606401610533565b60085460095460009182916001600160a01b039182169190811690891682148015906106555750806001600160a01b0316896001600160a01b031614155b6106935760405162461bcd60e51b815260206004820152600f60248201526e4175726120494e56414c49445f544f60881b6044820152606401610533565b8a156106a4576106a4828a8d611a20565b89156106b5576106b5818a8c611a20565b8615610722576040516329b6c68560e21b81526001600160a01b038a169063a6db1a14906106ef9033908f908f908e908e9060040161231b565b600060405180830381600087803b15801561070957600080fd5b505af115801561071d573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a9190612367565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa1580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f59190612367565b92505050600089856001600160701b03166108109190612396565b831161081d57600061083a565b6108308a6001600160701b038716612396565b61083a9084612396565b905060006108518a6001600160701b038716612396565b831161085e57600061087b565b6108718a6001600160701b038716612396565b61087b9084612396565b9050600082118061088c5750600081115b6108d85760405162461bcd60e51b815260206004820152601e60248201527f4175726120494e53554646494349454e545f494e5055545f414d4f554e5400006044820152606401610533565b600e5463ffffffff1660006108ed82856123ad565b6108f9876103e86123ad565b6109039190612396565b9050600061091183856123ad565b61091d876103e86123ad565b6109279190612396565b905061093f6001600160701b03808a16908b166123ad565b61094c90620f42406123ad565b61095682846123ad565b101561098d5760405162461bcd60e51b815260206004820152600660248201526541757261204b60d01b6044820152606401610533565b50505061099c84848888611b3b565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600655505050505050505050565b60008163ffffffff1611610a525760405162461bcd60e51b8152602060048201526016602482015275041757261506169723a206c6f776572207468656e20360541b6044820152606401610533565b6007546001600160a01b03163314610aa25760405162461bcd60e51b815260206004820152601360248201527220bab930a830b4b91d102327a92124a22222a760691b6044820152606401610533565b6101f48163ffffffff161115610af45760405162461bcd60e51b815260206004820152601760248201527641757261506169723a20464f5242494444454e5f46454560481b6044820152606401610533565b600e805463ffffffff9092166401000000000267ffffffff0000000019909216919091179055565b60008054610b29906123cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b55906123cc565b8015610ba25780601f10610b7757610100808354040283529160200191610ba2565b820191906000526020600020905b815481529060010190602001808311610b8557829003601f168201915b505050505081565b600a546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610c2f9086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610c9c57610c778382612396565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610cc4908490612396565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206125c983398151915290610d0d9087815260200190565b60405180910390a3506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610d5657610d51611d22565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6007546001600160a01b03163314610dc65760405162461bcd60e51b815260206004820152600e60248201526d20bab930902327a92124a22222a760911b6044820152606401610533565b600880546001600160a01b039384166001600160a01b03199182161790915560098054929093169116179055565b6000600654600114610e185760405162461bcd60e51b8152600401610533906122f7565b6002600655600080610e28610baa565b506008546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9e9190612367565b6009546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f109190612367565b90506000610f276001600160701b03861684612396565b90506000610f3e6001600160701b03861684612396565b90506000610f4c8787611dbc565b60025490915080610f8a576103e8610f6c610f6785876123ad565b611f0e565b610f769190612396565b9850610f8560006103e8611f7e565b610fd1565b610fce6001600160701b038916610fa183876123ad565b610fab9190612417565b6001600160701b038916610fbf84876123ad565b610fc99190612417565b611fd8565b98505b6000891161102c5760405162461bcd60e51b815260206004820152602260248201527f4175726120494e53554646494349454e545f4c49515549444954595f4d494e54604482015261115160f21b6064820152608401610533565b6110368a8a611f7e565b61104286868a8a611b3b565b811561106b57600a54611067906001600160701b03600160701b8204811691166123ad565b600d555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a25050600160065550949695505050505050565b6000806006546001146110de5760405162461bcd60e51b8152600401610533906122f7565b60026006556000806110ee610baa565b506008546009546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c9190612367565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156111b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111da9190612367565b306000908152600360205260408120549192506111f78888611dbc565b6002549091508061120886856123ad565b6112129190612417565b9a508061121f85856123ad565b6112299190612417565b995060008b11801561123b575060008a115b6112925760405162461bcd60e51b815260206004820152602260248201527f4175726120494e53554646494349454e545f4c49515549444954595f4255524e604482015261115160f21b6064820152608401610533565b61129c3084611ff0565b6112a7878d8d611a20565b6112b2868d8c611a20565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa1580156112f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131a9190612367565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa158015611361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113859190612367565b935061139385858b8b611b3b565b81156113bc57600a546113b8906001600160701b03600160701b8204811691166123ad565b600d555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600681905550915091565b60018054610b29906123cc565b33600090815260036020526040812080548391908390611446908490612396565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206125c983398151915290610c2f9086815260200190565b6006546001146114ad5760405162461bcd60e51b8152600401610533906122f7565b6002600655600854600954600a546040516370a0823160e01b81523060048201526001600160a01b03938416939092169161154c91849186916001600160701b03169083906370a08231906024015b602060405180830381865afa158015611519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153d9190612367565b6115479190612396565b611a20565b600a546040516370a0823160e01b81523060048201526115949183918691600160701b90046001600160701b0316906001600160a01b038416906370a08231906024016114fc565b5050600160065550565b428410156115ee5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610533565b60006115f8610d20565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611711573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117475750886001600160a01b0316816001600160a01b0316145b6117845760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610533565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60008163ffffffff161161183e5760405162461bcd60e51b8152602060048201526016602482015275041757261506169723a206c6f776572207468656e20360541b6044820152606401610533565b6007546001600160a01b0316331461188e5760405162461bcd60e51b815260206004820152601360248201527220bab930a830b4b91d102327a92124a22222a760691b6044820152606401610533565b6103e88163ffffffff1611156118e05760405162461bcd60e51b815260206004820152601760248201527641757261506169723a20464f5242494444454e5f46454560481b6044820152606401610533565b600e805463ffffffff191663ffffffff92909216919091179055565b60065460011461191e5760405162461bcd60e51b8152600401610533906122f7565b60026006556008546040516370a0823160e01b8152306004820152611a19916001600160a01b0316906370a0823190602401602060405180830381865afa15801561196d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119919190612367565b6009546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156119d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fd9190612367565b600a546001600160701b0380821691600160701b900416611b3b565b6001600655565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611a7c919061242b565b6000604051808303816000865af19150503d8060008114611ab9576040519150601f19603f3d011682016040523d82523d6000602084013e611abe565b606091505b5091509150818015611ae8575080511580611ae8575080806020019051810190611ae89190612447565b611b345760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606401610533565b5050505050565b6001600160701b038411801590611b5957506001600160701b038311155b611b965760405162461bcd60e51b815260206004820152600e60248201526d417572613a204f564552464c4f5760901b6044820152606401610533565b6000611ba764010000000042612469565b600a54909150600090611bc790600160e01b900463ffffffff168361247d565b905060008163ffffffff16118015611be757506001600160701b03841615155b8015611bfb57506001600160701b03831615155b15611c8a578063ffffffff16611c2385611c1486612052565b6001600160e01b031690612071565b6001600160e01b0316611c3691906123ad565b600b6000828254611c4791906124a2565b909155505063ffffffff8116611c6084611c1487612052565b6001600160e01b0316611c7391906123ad565b600c6000828254611c8491906124a2565b90915550505b600a805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611d5491906124ba565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e369190612556565b600d546001600160a01b038216158015945091925090611efa578015611ef5576000611e71610f676001600160701b038088169089166123ad565b90506000611e7e83611f0e565b905080821115611ef2576000611e948284612396565b600254611ea191906123ad565b600e549091506000908390611ec490640100000000900463ffffffff16866123ad565b611ece91906124a2565b90506000611edc8284612417565b90508015611eee57611eee8782611f7e565b5050505b50505b611f06565b8015611f06576000600d555b505092915050565b60006003821115611f6f5750806000611f28600283612417565b611f339060016124a2565b90505b81811015611f6957905080600281611f4e8186612417565b611f5891906124a2565b611f629190612417565b9050611f36565b50919050565b8115611f79575060015b919050565b8060026000828254611f9091906124a2565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206125c983398151915291015b60405180910390a35050565b6000818310611fe75781611fe9565b825b9392505050565b6001600160a01b03821660009081526003602052604081208054839290612018908490612396565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206125c983398151915290602001611fcc565b600061206b600160701b6001600160701b038416612573565b92915050565b6000611fe96001600160701b038316846125a2565b6001600160a01b038116811461209b57600080fd5b50565b6000806000806000608086880312156120b657600080fd5b853594506020860135935060408601356120cf81612086565b9250606086013567ffffffffffffffff808211156120ec57600080fd5b818801915088601f83011261210057600080fd5b81358181111561210f57600080fd5b89602082850101111561212157600080fd5b9699959850939650602001949392505050565b60006020828403121561214657600080fd5b813563ffffffff81168114611fe957600080fd5b60005b8381101561217557818101518382015260200161215d565b83811115612184576000848401525b50505050565b60208152600082518060208401526121a981604085016020870161215a565b601f01601f19169190910160400192915050565b600080604083850312156121d057600080fd5b82356121db81612086565b946020939093013593505050565b6000806000606084860312156121fe57600080fd5b833561220981612086565b9250602084013561221981612086565b929592945050506040919091013590565b6000806040838503121561223d57600080fd5b823561224881612086565b9150602083013561225881612086565b809150509250929050565b60006020828403121561227557600080fd5b8135611fe981612086565b600080600080600080600060e0888a03121561229b57600080fd5b87356122a681612086565b965060208801356122b681612086565b95506040880135945060608801359350608088013560ff811681146122da57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60006020828403121561237957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156123a8576123a8612380565b500390565b60008160001904831182151516156123c7576123c7612380565b500290565b600181811c908216806123e057607f821691505b60208210811415611f6957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261242657612426612401565b500490565b6000825161243d81846020870161215a565b9190910192915050565b60006020828403121561245957600080fd5b81518015158114611fe957600080fd5b60008261247857612478612401565b500690565b600063ffffffff8381169083168181101561249a5761249a612380565b039392505050565b600082198211156124b5576124b5612380565b500190565b600080835481600182811c9150808316806124d657607f831692505b60208084108214156124f657634e487b7160e01b86526022600452602486fd5b81801561250a576001811461251b57612548565b60ff19861689528489019650612548565b60008a81526020902060005b868110156125405781548b820152908501908301612527565b505084890196505b509498975050505050505050565b60006020828403121561256857600080fd5b8151611fe981612086565b60006001600160e01b038281168482168115158284048211161561259957612599612380565b02949350505050565b60006001600160e01b03838116806125bc576125bc612401565b9216919091049291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212207670c2222a58d6f2c0e423ff108dadcc6b9cad5f55e00c230dc2ab2a6c4aa70664736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000b75760003560e01c80639e68ceb8116200007a5780639e68ceb8146200013a578063a2e74af61462000153578063c9c65396146200016a578063e6a439051462000181578063ef0bc99314620001b8578063f46901ed14620001cf57600080fd5b8063017e7e5814620000bc578063094b741514620000ed5780631e3dd18b1462000101578063257671f51462000118578063574f2ba31462000131575b600080fd5b600054620000d0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600154620000d0906001600160a01b031681565b620000d062000112366004620006fb565b620001e6565b6200012260025481565b604051908152602001620000e4565b60045462000122565b620001516200014b36600462000732565b62000211565b005b620001516200016436600462000776565b620002ad565b620000d06200017b3660046200079b565b620002fc565b620000d0620001923660046200079b565b60036020908152600092835260408084209091529082529020546001600160a01b031681565b62000151620001c9366004620007d3565b620005f7565b62000151620001e036600462000776565b6200069e565b60048181548110620001f757600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b03163314620002475760405162461bcd60e51b81526004016200023e9062000809565b60405180910390fd5b60405163d6d788c360e01b815263ffffffff821660048201526001600160a01b0383169063d6d788c3906024015b600060405180830381600087803b1580156200029057600080fd5b505af1158015620002a5573d6000803e3d6000fd5b505050505050565b6001546001600160a01b03163314620002da5760405162461bcd60e51b81526004016200023e9062000809565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b03161415620003625760405162461bcd60e51b815260206004820152601960248201527f417572613a204944454e544943414c5f4144445245535345530000000000000060448201526064016200023e565b600080836001600160a01b0316856001600160a01b031610620003875783856200038a565b84845b90925090506001600160a01b038216620003dc5760405162461bcd60e51b8152602060048201526012602482015271417572613a205a45524f5f4144445245535360701b60448201526064016200023e565b6001600160a01b03828116600090815260036020908152604080832085851684529091529020541615620004475760405162461bcd60e51b8152602060048201526011602482015270417572613a20504149525f45584953545360781b60448201526064016200023e565b6000604051806020016200045b90620006ed565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156200050e57600080fd5b505af115801562000523573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526003602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b03163314620006245760405162461bcd60e51b81526004016200023e9062000809565b60008160ff16116200066f5760405162461bcd60e51b8152602060048201526013602482015272417572613a20464f5242494444454e5f46454560681b60448201526064016200023e565b604051623c150b60e41b815260ff821660048201526001600160a01b038316906303c150b09060240162000275565b6001546001600160a01b03163314620006cb5760405162461bcd60e51b81526004016200023e9062000809565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61293c806200083383390190565b6000602082840312156200070e57600080fd5b5035919050565b80356001600160a01b03811681146200072d57600080fd5b919050565b600080604083850312156200074657600080fd5b620007518362000715565b9150602083013563ffffffff811681146200076b57600080fd5b809150509250929050565b6000602082840312156200078957600080fd5b620007948262000715565b9392505050565b60008060408385031215620007af57600080fd5b620007ba8362000715565b9150620007ca6020840162000715565b90509250929050565b60008060408385031215620007e757600080fd5b620007f28362000715565b9150602083013560ff811681146200076b57600080fd5b6020808252600f908201526e20bab9309d102327a92124a22222a760891b60408201526060019056fe60e06040526001600655600e80546001600160401b0319166405000000021790553480156200002d57600080fd5b50604080518082018252600881526741757261204c507360c01b6020808301918252835180850190945260078452660415552412d4c560cc1b90840152815191929160129162000081916000919062000167565b5081516200009790600190602085019062000167565b5060ff81166080524660a052620000ad620000cb565b60c0525050600780546001600160a01b0319163317905550620002ee565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ff91906200024a565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b82805462000175906200020d565b90600052602060002090601f016020900481019282620001995760008555620001e4565b82601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b5b80821115620001f25760008155600101620001f7565b600181811c908216806200022257607f821691505b602082108114156200024457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200026757607f831692505b60208084108214156200028857634e487b7160e01b86526022600452602486fd5b8180156200029f5760018114620002b157620002e0565b60ff19861689528489019650620002e0565b60008a81526020902060005b86811015620002d85781548b820152908501908301620002bd565b505084890196505b509498975050505050505050565b60805160a05160c05161261e6200031e6000396000610d5901526000610d2401526000610313015261261e6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636827e7641161010f578063ba9a7a56116100a2578063d505accf11610071578063d505accf146104b8578063d6d788c3146104cb578063dd62ed3e146104de578063fff6cae91461050957600080fd5b8063ba9a7a5614610476578063bc25cf771461047f578063c45a015514610492578063d21220a7146104a557600080fd5b80637ecebe00116100de5780637ecebe001461041357806389afcb441461043357806395d89b411461045b578063a9059cbb1461046357600080fd5b80636827e764146103bf5780636a627842146103d757806370a08231146103ea5780637464fc3d1461040a57600080fd5b806330adf81f1161018757806354cf2aeb1161015657806354cf2aeb146103625780635909c0d5146103875780635a3d5493146103905780635e07a0991461039957600080fd5b806330adf81f146102e7578063313ce5671461030e5780633644e51514610347578063485cc9551461034f57600080fd5b8063095ea7b3116101c3578063095ea7b31461026f5780630dfe16811461029257806318160ddd146102bd57806323b872dd146102d457600080fd5b8063022c0d9f146101f557806303c150b01461020a57806306fdde031461021d5780630902f1ac1461023b575b600080fd5b61020861020336600461209e565b610511565b005b610208610218366004612134565b610a03565b610225610b1c565b604051610232919061218a565b60405180910390f35b610243610baa565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610232565b61028261027d3660046121bd565b610bd4565b6040519015158152602001610232565b6008546102a5906001600160a01b031681565b6040516001600160a01b039091168152602001610232565b6102c660025481565b604051908152602001610232565b6102826102e23660046121e9565b610c40565b6102c67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6103357f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610232565b6102c6610d20565b61020861035d36600461222a565b610d7b565b600e546103729063ffffffff1681565b60405163ffffffff9091168152602001610232565b6102c6600b5481565b6102c6600c5481565b6103a76001600160701b0381565b6040516001600160701b039091168152602001610232565b600e5461037290640100000000900463ffffffff1681565b6102c66103e5366004612263565b610df4565b6102c66103f8366004612263565b60036020526000908152604090205481565b6102c6600d5481565b6102c6610421366004612263565b60056020526000908152604090205481565b610446610441366004612263565b6110b9565b60408051928352602083019190915201610232565b610225611418565b6102826104713660046121bd565b611425565b6102c66103e881565b61020861048d366004612263565b61148b565b6007546102a5906001600160a01b031681565b6009546102a5906001600160a01b031681565b6102086104c6366004612280565b61159e565b6102086104d9366004612134565b6117ef565b6102c66104ec36600461222a565b600460209081526000928352604080842090915290825290205481565b6102086118fc565b60065460011461053c5760405162461bcd60e51b8152600401610533906122f7565b60405180910390fd5b60026006558415158061054f5750600084115b61059b5760405162461bcd60e51b815260206004820152601f60248201527f4175726120494e53554646494349454e545f4f55545055545f414d4f554e54006044820152606401610533565b6000806105a6610baa565b5091509150816001600160701b0316871080156105cb5750806001600160701b031686105b6106175760405162461bcd60e51b815260206004820152601b60248201527f4175726120494e53554646494349454e545f4c495155494449545900000000006044820152606401610533565b60085460095460009182916001600160a01b039182169190811690891682148015906106555750806001600160a01b0316896001600160a01b031614155b6106935760405162461bcd60e51b815260206004820152600f60248201526e4175726120494e56414c49445f544f60881b6044820152606401610533565b8a156106a4576106a4828a8d611a20565b89156106b5576106b5818a8c611a20565b8615610722576040516329b6c68560e21b81526001600160a01b038a169063a6db1a14906106ef9033908f908f908e908e9060040161231b565b600060405180830381600087803b15801561070957600080fd5b505af115801561071d573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a9190612367565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa1580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f59190612367565b92505050600089856001600160701b03166108109190612396565b831161081d57600061083a565b6108308a6001600160701b038716612396565b61083a9084612396565b905060006108518a6001600160701b038716612396565b831161085e57600061087b565b6108718a6001600160701b038716612396565b61087b9084612396565b9050600082118061088c5750600081115b6108d85760405162461bcd60e51b815260206004820152601e60248201527f4175726120494e53554646494349454e545f494e5055545f414d4f554e5400006044820152606401610533565b600e5463ffffffff1660006108ed82856123ad565b6108f9876103e86123ad565b6109039190612396565b9050600061091183856123ad565b61091d876103e86123ad565b6109279190612396565b905061093f6001600160701b03808a16908b166123ad565b61094c90620f42406123ad565b61095682846123ad565b101561098d5760405162461bcd60e51b815260206004820152600660248201526541757261204b60d01b6044820152606401610533565b50505061099c84848888611b3b565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600655505050505050505050565b60008163ffffffff1611610a525760405162461bcd60e51b8152602060048201526016602482015275041757261506169723a206c6f776572207468656e20360541b6044820152606401610533565b6007546001600160a01b03163314610aa25760405162461bcd60e51b815260206004820152601360248201527220bab930a830b4b91d102327a92124a22222a760691b6044820152606401610533565b6101f48163ffffffff161115610af45760405162461bcd60e51b815260206004820152601760248201527641757261506169723a20464f5242494444454e5f46454560481b6044820152606401610533565b600e805463ffffffff9092166401000000000267ffffffff0000000019909216919091179055565b60008054610b29906123cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b55906123cc565b8015610ba25780601f10610b7757610100808354040283529160200191610ba2565b820191906000526020600020905b815481529060010190602001808311610b8557829003601f168201915b505050505081565b600a546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610c2f9086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610c9c57610c778382612396565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610cc4908490612396565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206125c983398151915290610d0d9087815260200190565b60405180910390a3506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610d5657610d51611d22565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6007546001600160a01b03163314610dc65760405162461bcd60e51b815260206004820152600e60248201526d20bab930902327a92124a22222a760911b6044820152606401610533565b600880546001600160a01b039384166001600160a01b03199182161790915560098054929093169116179055565b6000600654600114610e185760405162461bcd60e51b8152600401610533906122f7565b6002600655600080610e28610baa565b506008546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9e9190612367565b6009546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f109190612367565b90506000610f276001600160701b03861684612396565b90506000610f3e6001600160701b03861684612396565b90506000610f4c8787611dbc565b60025490915080610f8a576103e8610f6c610f6785876123ad565b611f0e565b610f769190612396565b9850610f8560006103e8611f7e565b610fd1565b610fce6001600160701b038916610fa183876123ad565b610fab9190612417565b6001600160701b038916610fbf84876123ad565b610fc99190612417565b611fd8565b98505b6000891161102c5760405162461bcd60e51b815260206004820152602260248201527f4175726120494e53554646494349454e545f4c49515549444954595f4d494e54604482015261115160f21b6064820152608401610533565b6110368a8a611f7e565b61104286868a8a611b3b565b811561106b57600a54611067906001600160701b03600160701b8204811691166123ad565b600d555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a25050600160065550949695505050505050565b6000806006546001146110de5760405162461bcd60e51b8152600401610533906122f7565b60026006556000806110ee610baa565b506008546009546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c9190612367565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156111b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111da9190612367565b306000908152600360205260408120549192506111f78888611dbc565b6002549091508061120886856123ad565b6112129190612417565b9a508061121f85856123ad565b6112299190612417565b995060008b11801561123b575060008a115b6112925760405162461bcd60e51b815260206004820152602260248201527f4175726120494e53554646494349454e545f4c49515549444954595f4255524e604482015261115160f21b6064820152608401610533565b61129c3084611ff0565b6112a7878d8d611a20565b6112b2868d8c611a20565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa1580156112f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131a9190612367565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa158015611361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113859190612367565b935061139385858b8b611b3b565b81156113bc57600a546113b8906001600160701b03600160701b8204811691166123ad565b600d555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600681905550915091565b60018054610b29906123cc565b33600090815260036020526040812080548391908390611446908490612396565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206125c983398151915290610c2f9086815260200190565b6006546001146114ad5760405162461bcd60e51b8152600401610533906122f7565b6002600655600854600954600a546040516370a0823160e01b81523060048201526001600160a01b03938416939092169161154c91849186916001600160701b03169083906370a08231906024015b602060405180830381865afa158015611519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153d9190612367565b6115479190612396565b611a20565b600a546040516370a0823160e01b81523060048201526115949183918691600160701b90046001600160701b0316906001600160a01b038416906370a08231906024016114fc565b5050600160065550565b428410156115ee5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610533565b60006115f8610d20565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611711573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117475750886001600160a01b0316816001600160a01b0316145b6117845760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610533565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60008163ffffffff161161183e5760405162461bcd60e51b8152602060048201526016602482015275041757261506169723a206c6f776572207468656e20360541b6044820152606401610533565b6007546001600160a01b0316331461188e5760405162461bcd60e51b815260206004820152601360248201527220bab930a830b4b91d102327a92124a22222a760691b6044820152606401610533565b6103e88163ffffffff1611156118e05760405162461bcd60e51b815260206004820152601760248201527641757261506169723a20464f5242494444454e5f46454560481b6044820152606401610533565b600e805463ffffffff191663ffffffff92909216919091179055565b60065460011461191e5760405162461bcd60e51b8152600401610533906122f7565b60026006556008546040516370a0823160e01b8152306004820152611a19916001600160a01b0316906370a0823190602401602060405180830381865afa15801561196d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119919190612367565b6009546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156119d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fd9190612367565b600a546001600160701b0380821691600160701b900416611b3b565b6001600655565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611a7c919061242b565b6000604051808303816000865af19150503d8060008114611ab9576040519150601f19603f3d011682016040523d82523d6000602084013e611abe565b606091505b5091509150818015611ae8575080511580611ae8575080806020019051810190611ae89190612447565b611b345760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606401610533565b5050505050565b6001600160701b038411801590611b5957506001600160701b038311155b611b965760405162461bcd60e51b815260206004820152600e60248201526d417572613a204f564552464c4f5760901b6044820152606401610533565b6000611ba764010000000042612469565b600a54909150600090611bc790600160e01b900463ffffffff168361247d565b905060008163ffffffff16118015611be757506001600160701b03841615155b8015611bfb57506001600160701b03831615155b15611c8a578063ffffffff16611c2385611c1486612052565b6001600160e01b031690612071565b6001600160e01b0316611c3691906123ad565b600b6000828254611c4791906124a2565b909155505063ffffffff8116611c6084611c1487612052565b6001600160e01b0316611c7391906123ad565b600c6000828254611c8491906124a2565b90915550505b600a805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611d5491906124ba565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e369190612556565b600d546001600160a01b038216158015945091925090611efa578015611ef5576000611e71610f676001600160701b038088169089166123ad565b90506000611e7e83611f0e565b905080821115611ef2576000611e948284612396565b600254611ea191906123ad565b600e549091506000908390611ec490640100000000900463ffffffff16866123ad565b611ece91906124a2565b90506000611edc8284612417565b90508015611eee57611eee8782611f7e565b5050505b50505b611f06565b8015611f06576000600d555b505092915050565b60006003821115611f6f5750806000611f28600283612417565b611f339060016124a2565b90505b81811015611f6957905080600281611f4e8186612417565b611f5891906124a2565b611f629190612417565b9050611f36565b50919050565b8115611f79575060015b919050565b8060026000828254611f9091906124a2565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206125c983398151915291015b60405180910390a35050565b6000818310611fe75781611fe9565b825b9392505050565b6001600160a01b03821660009081526003602052604081208054839290612018908490612396565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206125c983398151915290602001611fcc565b600061206b600160701b6001600160701b038416612573565b92915050565b6000611fe96001600160701b038316846125a2565b6001600160a01b038116811461209b57600080fd5b50565b6000806000806000608086880312156120b657600080fd5b853594506020860135935060408601356120cf81612086565b9250606086013567ffffffffffffffff808211156120ec57600080fd5b818801915088601f83011261210057600080fd5b81358181111561210f57600080fd5b89602082850101111561212157600080fd5b9699959850939650602001949392505050565b60006020828403121561214657600080fd5b813563ffffffff81168114611fe957600080fd5b60005b8381101561217557818101518382015260200161215d565b83811115612184576000848401525b50505050565b60208152600082518060208401526121a981604085016020870161215a565b601f01601f19169190910160400192915050565b600080604083850312156121d057600080fd5b82356121db81612086565b946020939093013593505050565b6000806000606084860312156121fe57600080fd5b833561220981612086565b9250602084013561221981612086565b929592945050506040919091013590565b6000806040838503121561223d57600080fd5b823561224881612086565b9150602083013561225881612086565b809150509250929050565b60006020828403121561227557600080fd5b8135611fe981612086565b600080600080600080600060e0888a03121561229b57600080fd5b87356122a681612086565b965060208801356122b681612086565b95506040880135945060608801359350608088013560ff811681146122da57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60006020828403121561237957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156123a8576123a8612380565b500390565b60008160001904831182151516156123c7576123c7612380565b500290565b600181811c908216806123e057607f821691505b60208210811415611f6957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261242657612426612401565b500490565b6000825161243d81846020870161215a565b9190910192915050565b60006020828403121561245957600080fd5b81518015158114611fe957600080fd5b60008261247857612478612401565b500690565b600063ffffffff8381169083168181101561249a5761249a612380565b039392505050565b600082198211156124b5576124b5612380565b500190565b600080835481600182811c9150808316806124d657607f831692505b60208084108214156124f657634e487b7160e01b86526022600452602486fd5b81801561250a576001811461251b57612548565b60ff19861689528489019650612548565b60008a81526020902060005b868110156125405781548b820152908501908301612527565b505084890196505b509498975050505050505050565b60006020828403121561256857600080fd5b8151611fe981612086565b60006001600160e01b038281168482168115158284048211161561259957612599612380565b02949350505050565b60006001600160e01b03838116806125bc576125bc612401565b9216919091049291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212207670c2222a58d6f2c0e423ff108dadcc6b9cad5f55e00c230dc2ab2a6c4aa70664736f6c634300080a0033a264697066735822122030a75e475568f40596b218f5329a5498eacbcf5687a51d2dae074de75f7fb16964736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:737:29",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:29",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "151:289:29",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "161:27:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "181:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "175:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:13:29"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "165:6:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "197:10:29",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "206:1:29",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "201:1:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:77:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "293:3:29"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:1:29"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "289:3:29"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "289:11:29"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "316:6:29"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "324:1:29"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "312:3:29"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "312:14:29"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "328:4:29",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:3:29"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "308:25:29"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "302:5:29"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "302:32:29"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "282:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:53:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:53:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "227:1:29"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "224:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:13:29"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "238:21:29",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "240:17:29",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "249:1:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "252:4:29",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "245:3:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "245:12:29"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "240:1:29"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "220:3:29",
                    "statements": []
                  },
                  "src": "216:129:29"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "371:31:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "384:3:29"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:6:29"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "380:3:29"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "380:16:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "373:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "373:27:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "373:27:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "360:1:29"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "357:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "357:13:29"
                  },
                  "nodeType": "YulIf",
                  "src": "354:48:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "411:23:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "422:3:29"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "427:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:16:29"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "411:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "127:3:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "132:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "143:3:29",
                "type": ""
              }
            ],
            "src": "14:426:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "526:209:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "572:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "581:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "584:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "574:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "574:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "574:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "547:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "556:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "568:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "539:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "536:52:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "597:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "616:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "610:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "610:16:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "601:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "689:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "698:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "701:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "691:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "691:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "691:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "648:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:29"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "674:3:29",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "679:1:29",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "670:3:29"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "670:11:29"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "683:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "666:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "666:19:29"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "655:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "655:31:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "645:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "645:42:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "638:50:29"
                  },
                  "nodeType": "YulIf",
                  "src": "635:70:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "714:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "724:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "714:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "492:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "503:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "515:6:29",
                "type": ""
              }
            ],
            "src": "445:290:29"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5157:29",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:29",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:29",
                "type": ""
              }
            ],
            "src": "14:203:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:110:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "313:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "322:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "309:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "305:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "302:52:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "363:33:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "386:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "373:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:23:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "363:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "258:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "269:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "281:6:29",
                "type": ""
              }
            ],
            "src": "222:180:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:76:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "530:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "541:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "526:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "518:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "560:9:29"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "571:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "553:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:25:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "553:25:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "477:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "488:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "499:4:29",
                "type": ""
              }
            ],
            "src": "407:177:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "690:76:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "700:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "712:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "723:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "708:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "708:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "700:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "742:9:29"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "753:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "735:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:25:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "735:25:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "659:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "670:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "681:4:29",
                "type": ""
              }
            ],
            "src": "589:177:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "820:124:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "830:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "852:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "839:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "830:5:29"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "922:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "931:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "934:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "924:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "924:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "924:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "881:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "892:5:29"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "907:3:29",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "912:1:29",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "903:3:29"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "903:11:29"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "916:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "899:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "899:19:29"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "888:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "888:31:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "878:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "878:42:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "871:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:50:29"
                  },
                  "nodeType": "YulIf",
                  "src": "868:70:29"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "799:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "810:5:29",
                "type": ""
              }
            ],
            "src": "771:173:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1035:264:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1081:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1090:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1093:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1083:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1083:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1083:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1056:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1065:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1052:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1052:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1077:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1048:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1048:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1045:52:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1106:39:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1135:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1116:18:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1116:29:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1106:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1154:45:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1195:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1180:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1180:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1167:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:32:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1158:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1253:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1262:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1265:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1255:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1255:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1255:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1221:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1232:5:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1239:10:29",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1228:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1228:22:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1218:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1218:33:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1211:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1211:41:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1208:61:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1278:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1288:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1278:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "993:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1004:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1016:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1024:6:29",
                "type": ""
              }
            ],
            "src": "949:350:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1374:116:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1420:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1429:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1432:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1422:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1422:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1422:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1395:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1404:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1391:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1391:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1416:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1387:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1384:52:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1445:39:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1474:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1455:18:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1455:29:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1445:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1340:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1351:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1363:6:29",
                "type": ""
              }
            ],
            "src": "1304:186:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1582:173:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1628:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1637:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1640:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1630:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1630:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1630:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1603:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1612:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1599:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1599:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1624:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1595:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1595:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1592:52:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1653:39:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1682:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1663:18:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1663:29:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1653:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1701:48:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1734:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1745:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1711:18:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:38:29"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1701:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1540:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1551:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1563:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1571:6:29",
                "type": ""
              }
            ],
            "src": "1495:260:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1845:258:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1891:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1900:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1903:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1893:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1893:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1893:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1866:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1875:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1862:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1862:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1887:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1858:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1858:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1855:52:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1916:39:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1945:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1926:18:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1926:29:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1916:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1964:45:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1994:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2005:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1990:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1990:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1977:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1977:32:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1968:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2057:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2066:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2069:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2059:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2059:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2059:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2031:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2042:5:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2049:4:29",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2038:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2038:16:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2028:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2028:27:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2021:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:35:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2018:55:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2082:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2092:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2082:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1803:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1814:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1826:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1834:6:29",
                "type": ""
              }
            ],
            "src": "1760:343:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2282:165:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2299:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2310:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2292:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2292:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2292:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2333:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2344:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2329:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2329:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2349:2:29",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2322:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2322:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2372:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2383:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2368:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2368:18:29"
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2388:17:29",
                        "type": "",
                        "value": "Aura: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2361:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2361:45:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2361:45:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2415:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2427:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2438:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2423:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2423:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2415:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2259:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2273:4:29",
                "type": ""
              }
            ],
            "src": "2108:339:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2551:93:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2561:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2573:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2584:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2569:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2569:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2561:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2603:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2618:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2626:10:29",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2614:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2614:23:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2596:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2596:42:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2596:42:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2520:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2531:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2542:4:29",
                "type": ""
              }
            ],
            "src": "2452:192:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2823:175:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2840:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2851:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2833:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2833:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2833:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2874:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2885:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2870:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2870:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2890:2:29",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2863:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2863:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2863:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2913:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2924:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2909:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2909:18:29"
                      },
                      {
                        "hexValue": "417572613a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2929:27:29",
                        "type": "",
                        "value": "Aura: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2902:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2902:55:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2902:55:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2966:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2978:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2989:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2974:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2974:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2966:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0b28028472bd1f9ef1c0d3f3724d20c9416c0dcac1d9e9f482fff705b22736b7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2800:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2814:4:29",
                "type": ""
              }
            ],
            "src": "2649:349:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3177:168:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3194:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3205:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3187:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3187:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3187:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3228:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3239:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3224:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3224:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3244:2:29",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3217:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3217:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3217:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3267:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3278:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3263:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3263:18:29"
                      },
                      {
                        "hexValue": "417572613a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3283:20:29",
                        "type": "",
                        "value": "Aura: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3256:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3256:48:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3256:48:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3313:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3325:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3336:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3321:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3321:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3313:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c5089616d07043e3ff613f536a9aef1a6723463cbd531c86b7e1b7803d13a38f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3154:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3168:4:29",
                "type": ""
              }
            ],
            "src": "3003:342:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3524:167:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3541:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3552:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3534:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3534:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3534:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3575:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3586:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3571:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3571:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3591:2:29",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3564:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3564:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3564:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3614:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3625:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3610:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3610:18:29"
                      },
                      {
                        "hexValue": "417572613a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3630:19:29",
                        "type": "",
                        "value": "Aura: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3603:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3603:47:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3603:47:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3659:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3671:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3682:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3667:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3667:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3659:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_57c4b049a0561a69e89c4b6d10b8ca2ce5e7399fb8d148e96116043bb6dabb56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3501:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3515:4:29",
                "type": ""
              }
            ],
            "src": "3350:341:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3843:186:29",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3853:41:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3867:26:29",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "3863:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3863:31:29"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3857:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3910:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3923:2:29",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3927:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3919:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3919:15:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3936:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3915:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3915:24:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3903:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3903:37:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3903:37:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3960:3:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3965:2:29",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3956:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3956:12:29"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3978:2:29",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3982:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3974:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3974:15:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3991:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3970:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3970:24:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3949:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3949:46:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3949:46:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4004:19:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4015:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4020:2:29",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4011:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4011:12:29"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4004:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3811:3:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3816:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3824:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3835:3:29",
                "type": ""
              }
            ],
            "src": "3696:333:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4163:175:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4173:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4185:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4196:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4181:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4181:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4173:4:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4208:29:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4226:3:29",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4231:1:29",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4222:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4222:11:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4235:1:29",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4218:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4218:19:29"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4212:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4253:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4268:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4276:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4264:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4264:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4246:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4246:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4246:34:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4300:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4311:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4296:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4296:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4320:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4328:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4316:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4316:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4289:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4289:43:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4289:43:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4124:9:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4135:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4143:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4154:4:29",
                "type": ""
              }
            ],
            "src": "4034:304:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4472:145:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4482:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4494:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4505:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4490:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4490:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4482:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4524:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4539:6:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4555:3:29",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4560:1:29",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4551:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4551:11:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4564:1:29",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4547:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4547:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4535:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4535:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4517:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4517:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4517:51:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4588:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4599:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4584:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4584:18:29"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4604:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4577:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4577:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4577:34:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4433:9:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4444:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4452:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4463:4:29",
                "type": ""
              }
            ],
            "src": "4343:274:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4796:169:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4813:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4824:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4806:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4806:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4806:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4847:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4858:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4843:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4843:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4863:2:29",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4836:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4836:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4836:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4886:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4897:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4882:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4882:18:29"
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e5f464545",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4902:21:29",
                        "type": "",
                        "value": "Aura: FORBIDDEN_FEE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4875:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4875:49:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4875:49:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4933:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4945:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4956:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4941:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4941:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4933:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2c2230950d369989352bc734ddf2b4ef1507863ed53418557d72feaa09b854d1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4773:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4787:4:29",
                "type": ""
              }
            ],
            "src": "4622:343:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5068:87:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5078:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5090:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5101:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5086:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5086:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5078:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5120:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5135:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5143:4:29",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5131:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5131:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5113:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5113:36:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5113:36:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5037:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5048:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5059:4:29",
                "type": ""
              }
            ],
            "src": "4970:185:29"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Aura: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_0b28028472bd1f9ef1c0d3f3724d20c9416c0dcac1d9e9f482fff705b22736b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Aura: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c5089616d07043e3ff613f536a9aef1a6723463cbd531c86b7e1b7803d13a38f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Aura: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_57c4b049a0561a69e89c4b6d10b8ca2ce5e7399fb8d148e96116043bb6dabb56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Aura: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_2c2230950d369989352bc734ddf2b4ef1507863ed53418557d72feaa09b854d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Aura: FORBIDDEN_FEE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "152:2136:25:-:0;;;;;317:27;;;:::i;:::-;-1:-1:-1;;317:27:25;;;;;;;;;;;;;;;;300:45;;317:27;;300:45;;:::i;:::-;;;;;;;;;;;;;290:56;;;;;;258:88;;453:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;497:11;:26;;-1:-1:-1;;;;;;497:26:25;-1:-1:-1;;;;;497:26:25;;;;;;;;;;152:2136;;;;;;;;;;:::o;14:426:29:-;143:3;181:6;175:13;206:1;216:129;230:6;227:1;224:13;216:129;;;328:4;312:14;;;308:25;;302:32;289:11;;;282:53;245:12;216:129;;;363:6;360:1;357:13;354:48;;;398:1;389:6;384:3;380:16;373:27;354:48;-1:-1:-1;418:16:29;;;;;14:426;-1:-1:-1;;14:426:29:o;445:290::-;515:6;568:2;556:9;547:7;543:23;539:32;536:52;;;584:1;581;574:12;536:52;610:16;;-1:-1:-1;;;;;655:31:29;;645:42;;635:70;;701:1;698;691:12;635:70;724:5;445:290;-1:-1:-1;;;445:290:29:o;:::-;152:2136:25;;;;;;",
  "deployedSourceMap": "152:2136:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;200:20;;;;;-1:-1:-1;;;;;200:20:25;;;;;;-1:-1:-1;;;;;178:32:29;;;160:51;;148:2;133:18;200:20:25;;;;;;;;226:26;;;;;-1:-1:-1;;;;;226:26:25;;;421:25;;;;;;:::i;:::-;;:::i;258:88::-;;;;;;;;;553:25:29;;;541:2;526:18;258:88:25;407:177:29;536:94:25;608:8;:15;536:94;;2109:177;;;;;;:::i;:::-;;:::i;:::-;;1707:161;;;;;;:::i;:::-;;:::i;636:922::-;;;;;;:::i;:::-;;:::i;353:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;353:62:25;;;1874:225;;;;;;:::i;:::-;;:::i;1564:137::-;;;;;;:::i;:::-;;:::i;421:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;421:25:25;;-1:-1:-1;421:25:25;:::o;2109:177::-;2202:11;;-1:-1:-1;;;;;2202:11:25;2188:10;:25;2180:53;;;;-1:-1:-1;;;2180:53:25;;;;;;;:::i;:::-;;;;;;;;;2243:36;;-1:-1:-1;;;2243:36:25;;2626:10:29;2614:23;;2243:36:25;;;2596:42:29;-1:-1:-1;;;;;2243:26:25;;;;;2569:18:29;;2243:36:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:177;;:::o;1707:161::-;1794:11;;-1:-1:-1;;;;;1794:11:25;1780:10;:25;1772:53;;;;-1:-1:-1;;;1772:53:25;;;;;;;:::i;:::-;1835:11;:26;;-1:-1:-1;;;;;;1835:26:25;-1:-1:-1;;;;;1835:26:25;;;;;;;;;;1707:161::o;636:922::-;706:12;748:6;-1:-1:-1;;;;;738:16:25;:6;-1:-1:-1;;;;;738:16:25;;;730:54;;;;-1:-1:-1;;;730:54:25;;2851:2:29;730:54:25;;;2833:21:29;2890:2;2870:18;;;2863:30;2929:27;2909:18;;;2902:55;2974:18;;730:54:25;2649:349:29;730:54:25;795:14;811;838:6;-1:-1:-1;;;;;829:15:25;:6;-1:-1:-1;;;;;829:15:25;;:53;;867:6;875;829:53;;;848:6;856;829:53;794:88;;-1:-1:-1;794:88:25;-1:-1:-1;;;;;;900:20:25;;892:51;;;;-1:-1:-1;;;892:51:25;;3205:2:29;892:51:25;;;3187:21:29;3244:2;3224:18;;;3217:30;-1:-1:-1;;;3263:18:29;;;3256:48;3321:18;;892:51:25;3003:342:29;892:51:25;-1:-1:-1;;;;;961:15:25;;;996:1;961:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;953:67;;;;-1:-1:-1;;;953:67:25;;3552:2:29;953:67:25;;;3534:21:29;3591:2;3571:18;;;3564:30;-1:-1:-1;;;3610:18:29;;;3603:47;3667:18;;953:67:25;3350:341:29;953:67:25;1060:21;1084:27;;;;;;;;:::i;:::-;-1:-1:-1;;1084:27:25;;;;;;;;;;;;;;;;-1:-1:-1;;3923:2:29;3919:15;;;3915:24;;1084:27:25;1146:32;;3903:37:29;3974:15;;;3970:24;3956:12;;;3949:46;1084:27:25;;-1:-1:-1;1121:12:25;;4011::29;;1146:32:25;;;;;;;;;;;;1136:43;;;;;;1121:58;;1267:4;1256:8;1250:15;1245:2;1235:8;1231:17;1228:1;1220:52;1291:41;;-1:-1:-1;;;1291:41:25;;-1:-1:-1;;;;;4264:15:29;;;1291:41:25;;;4246:34:29;4316:15;;;4296:18;;;4289:43;1212:60:25;;-1:-1:-1;1291:25:25;;;;;;4181:18:29;;1291:41:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1342:15:25;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;-1:-1:-1;;;;;;1342:30:25;;;;;;;;1382:15;;;;;;:23;;;;;;;;:30;;;;;;;;1467:8;:19;;-1:-1:-1;1467:19:25;;;;;;;;;;;;;;;;;;;;;;1535:15;;1501:50;;4517:51:29;;;4584:18;;;4577:34;1501:50:25;;4490:18:29;1501:50:25;;;;;;;720:838;;;;636:922;;;;:::o;1874:225::-;1964:11;;-1:-1:-1;;;;;1964:11:25;1950:10;:25;1942:53;;;;-1:-1:-1;;;1942:53:25;;;;;;;:::i;:::-;2023:1;2013:7;:11;;;2005:43;;;;-1:-1:-1;;;2005:43:25;;4824:2:29;2005:43:25;;;4806:21:29;4863:2;4843:18;;;4836:30;-1:-1:-1;;;4882:18:29;;;4875:49;4941:18;;2005:43:25;4622:343:29;2005:43:25;2058:34;;-1:-1:-1;;;2058:34:25;;5143:4:29;5131:17;;2058:34:25;;;5113:36:29;-1:-1:-1;;;;;2058:25:25;;;;;5086:18:29;;2058:34:25;4970:185:29;1564:137:25;1639:11;;-1:-1:-1;;;;;1639:11:25;1625:10;:25;1617:53;;;;-1:-1:-1;;;1617:53:25;;;;;;;:::i;:::-;1680:5;:14;;-1:-1:-1;;;;;;1680:14:25;-1:-1:-1;;;;;1680:14:25;;;;;;;;;;1564:137::o;-1:-1:-1:-;;;;;;;;:::o;222:180:29:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:29;;222:180;-1:-1:-1;222:180:29:o;771:173::-;839:20;;-1:-1:-1;;;;;888:31:29;;878:42;;868:70;;934:1;931;924:12;868:70;771:173;;;:::o;949:350::-;1016:6;1024;1077:2;1065:9;1056:7;1052:23;1048:32;1045:52;;;1093:1;1090;1083:12;1045:52;1116:29;1135:9;1116:29;:::i;:::-;1106:39;;1195:2;1184:9;1180:18;1167:32;1239:10;1232:5;1228:22;1221:5;1218:33;1208:61;;1265:1;1262;1255:12;1208:61;1288:5;1278:15;;;949:350;;;;;:::o;1304:186::-;1363:6;1416:2;1404:9;1395:7;1391:23;1387:32;1384:52;;;1432:1;1429;1422:12;1384:52;1455:29;1474:9;1455:29;:::i;:::-;1445:39;1304:186;-1:-1:-1;;;1304:186:29:o;1495:260::-;1563:6;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1495:260;;;;;:::o;1760:343::-;1826:6;1834;1887:2;1875:9;1866:7;1862:23;1858:32;1855:52;;;1903:1;1900;1893:12;1855:52;1926:29;1945:9;1926:29;:::i;:::-;1916:39;;2005:2;1994:9;1990:18;1977:32;2049:4;2042:5;2038:16;2031:5;2028:27;2018:55;;2069:1;2066;2059:12;2108:339;2310:2;2292:21;;;2349:2;2329:18;;;2322:30;-1:-1:-1;;;2383:2:29;2368:18;;2361:45;2438:2;2423:18;;2108:339::o",
  "source": "//SPDX-License-Identifier:MIT\npragma solidity >=0.8.0;\n\nimport './AuraPair.sol';\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\n\ncontract AuraFactory is IUniswapV2Factory {\n    address public feeTo;\n    address public feeToSetter;\n    bytes32 public INIT_CODE_HASH = keccak256(abi.encodePacked(type(AuraPair).creationCode));\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(tokenA != tokenB, 'Aura: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'Aura: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'Aura: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(AuraPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        AuraPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'Aura: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'Aura: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n\n    function setDevFee(address _pair, uint8 _devFee) external {\n        require(msg.sender == feeToSetter, 'Aura: FORBIDDEN');\n        require(_devFee > 0, 'Aura: FORBIDDEN_FEE');\n        AuraPair(_pair).setDevFee(_devFee);\n    }\n    \n    function setSwapFee(address _pair, uint32 _swapFee) external {\n        require(msg.sender == feeToSetter, 'Aura: FORBIDDEN');\n        AuraPair(_pair).setSwapFee(_swapFee);\n    }\n}",
  "sourcePath": "/Users/ericboris/Developer/aura/contracts/swaps/AuraFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/swaps/AuraFactory.sol",
    "exportedSymbols": {
      "AuraFactory": [
        6466
      ],
      "AuraLP": [
        7545
      ],
      "AuraPair": [
        7530
      ],
      "ERC20": [
        1489
      ],
      "ExtraMath": [
        3389
      ],
      "IAuraCallee": [
        2268
      ],
      "IERC20": [
        182
      ],
      "IUniswapV2Factory": [
        2254
      ],
      "Math": [
        495
      ],
      "ReentrancyGuard": [
        2031
      ],
      "TransferHelper": [
        2191
      ],
      "UQ112x112": [
        3433
      ]
    },
    "id": 6467,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6217,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "30:24:25"
      },
      {
        "absolutePath": "project:/contracts/swaps/AuraPair.sol",
        "file": "./AuraPair.sol",
        "id": 6218,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6467,
        "sourceUnit": 7531,
        "src": "56:24:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "id": 6219,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6467,
        "sourceUnit": 2255,
        "src": "81:69:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6220,
              "name": "IUniswapV2Factory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2254,
              "src": "176:17:25"
            },
            "id": 6221,
            "nodeType": "InheritanceSpecifier",
            "src": "176:17:25"
          }
        ],
        "canonicalName": "AuraFactory",
        "contractDependencies": [
          7530
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6466,
        "linearizedBaseContracts": [
          6466,
          2254
        ],
        "name": "AuraFactory",
        "nameLocation": "161:11:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2208
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 6223,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "215:5:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "200:20:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6222,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "200:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2213
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 6225,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "241:11:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "226:26:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6224,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "226:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "257671f5",
            "id": 6236,
            "mutability": "mutable",
            "name": "INIT_CODE_HASH",
            "nameLocation": "273:14:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "258:88:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6226,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "258:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 6231,
                            "name": "AuraPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7530,
                            "src": "322:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                              "typeString": "type(contract AuraPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                              "typeString": "type(contract AuraPair)"
                            }
                          ],
                          "id": 6230,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "317:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 6232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "317:14:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_AuraPair_$7530",
                          "typeString": "type(contract AuraPair)"
                        }
                      },
                      "id": 6233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "317:27:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 6228,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "300:3:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "300:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6234,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "300:45:25",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6227,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "290:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6235,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "290:56:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2222
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 6242,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "408:7:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "353:62:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 6241,
              "keyType": {
                "id": 6237,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "361:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "353:47:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 6240,
                "keyType": {
                  "id": 6238,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "380:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "372:27:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 6239,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "391:7:25",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2229
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 6245,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "438:8:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "421:25:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 6243,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "421:7:25",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 6244,
              "nodeType": "ArrayTypeName",
              "src": "421:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6254,
              "nodeType": "Block",
              "src": "487:43:25",
              "statements": [
                {
                  "expression": {
                    "id": 6252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6250,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6225,
                      "src": "497:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6251,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6247,
                      "src": "511:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "497:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6253,
                  "nodeType": "ExpressionStatement",
                  "src": "497:26:25"
                }
              ]
            },
            "id": 6255,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6247,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "473:12:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6255,
                  "src": "465:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "464:22:25"
            },
            "returnParameters": {
              "id": 6249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:25"
            },
            "scope": 6466,
            "src": "453:77:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2234
            ],
            "body": {
              "id": 6263,
              "nodeType": "Block",
              "src": "591:39:25",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 6260,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6245,
                      "src": "608:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 6261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "608:15:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6259,
                  "id": 6262,
                  "nodeType": "Return",
                  "src": "601:22:25"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 6264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "545:14:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:25"
            },
            "returnParameters": {
              "id": 6259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6258,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6264,
                  "src": "585:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6257,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:6:25"
            },
            "scope": 6466,
            "src": "536:94:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2243
            ],
            "body": {
              "id": 6375,
              "nodeType": "Block",
              "src": "720:838:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6274,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6266,
                          "src": "738:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6275,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6268,
                          "src": "748:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "738:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a204944454e544943414c5f414444524553534553",
                        "id": 6277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "756:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b28028472bd1f9ef1c0d3f3724d20c9416c0dcac1d9e9f482fff705b22736b7",
                          "typeString": "literal_string \"Aura: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Aura: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b28028472bd1f9ef1c0d3f3724d20c9416c0dcac1d9e9f482fff705b22736b7",
                          "typeString": "literal_string \"Aura: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 6273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "730:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:54:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6279,
                  "nodeType": "ExpressionStatement",
                  "src": "730:54:25"
                },
                {
                  "assignments": [
                    6281,
                    6283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6281,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "803:6:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 6375,
                      "src": "795:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6280,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "795:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6283,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "819:6:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 6375,
                      "src": "811:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6282,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "811:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6294,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6284,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6266,
                        "src": "829:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 6285,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6268,
                        "src": "838:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "829:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 6290,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6268,
                          "src": "867:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6291,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6266,
                          "src": "875:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 6292,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "866:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 6293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "829:53:25",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 6287,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6266,
                          "src": "848:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6288,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6268,
                          "src": "856:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 6289,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "847:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "794:88:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6296,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6281,
                          "src": "900:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "918:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "910:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6297,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "910:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "910:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "900:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a205a45524f5f41444452455353",
                        "id": 6302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "922:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5089616d07043e3ff613f536a9aef1a6723463cbd531c86b7e1b7803d13a38f",
                          "typeString": "literal_string \"Aura: ZERO_ADDRESS\""
                        },
                        "value": "Aura: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5089616d07043e3ff613f536a9aef1a6723463cbd531c86b7e1b7803d13a38f",
                          "typeString": "literal_string \"Aura: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 6295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "892:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "892:51:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6304,
                  "nodeType": "ExpressionStatement",
                  "src": "892:51:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 6306,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6242,
                              "src": "961:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 6308,
                            "indexExpression": {
                              "id": 6307,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6281,
                              "src": "969:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "961:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 6310,
                          "indexExpression": {
                            "id": 6309,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6283,
                            "src": "977:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "961:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "996:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "988:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6311,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "988:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "988:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "961:37:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20504149525f455849535453",
                        "id": 6316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1000:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57c4b049a0561a69e89c4b6d10b8ca2ce5e7399fb8d148e96116043bb6dabb56",
                          "typeString": "literal_string \"Aura: PAIR_EXISTS\""
                        },
                        "value": "Aura: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57c4b049a0561a69e89c4b6d10b8ca2ce5e7399fb8d148e96116043bb6dabb56",
                          "typeString": "literal_string \"Aura: PAIR_EXISTS\""
                        }
                      ],
                      "id": 6305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "953:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:67:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6318,
                  "nodeType": "ExpressionStatement",
                  "src": "953:67:25"
                },
                {
                  "assignments": [
                    6320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6320,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1073:8:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 6375,
                      "src": "1060:21:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 6319,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1060:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6325,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6322,
                          "name": "AuraPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "1089:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        ],
                        "id": 6321,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1084:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1084:14:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_AuraPair_$7530",
                        "typeString": "type(contract AuraPair)"
                      }
                    },
                    "id": 6324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1084:27:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1060:51:25"
                },
                {
                  "assignments": [
                    6327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6327,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1129:4:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 6375,
                      "src": "1121:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6326,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1121:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6335,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6331,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6281,
                            "src": "1163:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6332,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6283,
                            "src": "1171:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6329,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1146:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1146:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:32:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6328,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1136:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:43:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1121:58:25"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1198:84:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1212:60:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1228:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1235:8:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1245:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1231:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1231:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1256:8:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1250:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1250:15:25"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1267:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1220:7:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1220:52:25"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1212:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6320,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1235:8:25",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6320,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1256:8:25",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6271,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1212:4:25",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6327,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1267:4:25",
                      "valueSize": 1
                    }
                  ],
                  "id": 6336,
                  "nodeType": "InlineAssembly",
                  "src": "1189:93:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6341,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6281,
                        "src": "1317:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6342,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6283,
                        "src": "1325:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6338,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6271,
                            "src": "1300:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6337,
                          "name": "AuraPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "1291:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        },
                        "id": 6339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1291:14:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AuraPair_$7530",
                          "typeString": "contract AuraPair"
                        }
                      },
                      "id": 6340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6613,
                      "src": "1291:25:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 6343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6344,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:41:25"
                },
                {
                  "expression": {
                    "id": 6351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6345,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6242,
                          "src": "1342:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 6348,
                        "indexExpression": {
                          "id": 6346,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6281,
                          "src": "1350:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1342:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6349,
                      "indexExpression": {
                        "id": 6347,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6283,
                        "src": "1358:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1342:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6350,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6271,
                      "src": "1368:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1342:30:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6352,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:30:25"
                },
                {
                  "expression": {
                    "id": 6359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6353,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6242,
                          "src": "1382:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 6356,
                        "indexExpression": {
                          "id": 6354,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6283,
                          "src": "1390:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1382:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6357,
                      "indexExpression": {
                        "id": 6355,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6281,
                        "src": "1398:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1382:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6358,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6271,
                      "src": "1408:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1382:30:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6360,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6364,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6271,
                        "src": "1481:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6361,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6245,
                        "src": "1467:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 6363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1467:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 6365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6366,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:19:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6368,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6281,
                        "src": "1513:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6369,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6283,
                        "src": "1521:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6370,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6271,
                        "src": "1529:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6371,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6245,
                          "src": "1535:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1535:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6367,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2203,
                      "src": "1501:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 6373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:50:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6374,
                  "nodeType": "EmitStatement",
                  "src": "1496:55:25"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 6376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "645:10:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6266,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "664:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6376,
                  "src": "656:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6268,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "680:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6376,
                  "src": "672:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:32:25"
            },
            "returnParameters": {
              "id": 6272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6271,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "714:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6376,
                  "src": "706:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:14:25"
            },
            "scope": 6466,
            "src": "636:922:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2248
            ],
            "body": {
              "id": 6393,
              "nodeType": "Block",
              "src": "1607:94:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6382,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1625:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1625:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6384,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6225,
                          "src": "1639:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1625:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e",
                        "id": 6386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1652:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        },
                        "value": "Aura: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        }
                      ],
                      "id": 6381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1617:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:53:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6388,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:53:25"
                },
                {
                  "expression": {
                    "id": 6391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6389,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6223,
                      "src": "1680:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6390,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6378,
                      "src": "1688:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1680:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6392,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:14:25"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 6394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1573:8:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6378,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1590:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6394,
                  "src": "1582:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1581:16:25"
            },
            "returnParameters": {
              "id": 6380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1607:0:25"
            },
            "scope": 6466,
            "src": "1564:137:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2253
            ],
            "body": {
              "id": 6411,
              "nodeType": "Block",
              "src": "1762:106:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6400,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1780:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1780:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6402,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6225,
                          "src": "1794:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1780:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e",
                        "id": 6404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1807:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        },
                        "value": "Aura: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        }
                      ],
                      "id": 6399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1772:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:53:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6406,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:53:25"
                },
                {
                  "expression": {
                    "id": 6409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6407,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6225,
                      "src": "1835:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6408,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6396,
                      "src": "1849:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1835:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6410,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:26:25"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 6412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1716:14:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6396,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1739:12:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6412,
                  "src": "1731:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:22:25"
            },
            "returnParameters": {
              "id": 6398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1762:0:25"
            },
            "scope": 6466,
            "src": "1707:161:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6441,
              "nodeType": "Block",
              "src": "1932:167:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6420,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1950:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1950:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6422,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6225,
                          "src": "1964:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1950:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e",
                        "id": 6424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1977:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        },
                        "value": "Aura: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        }
                      ],
                      "id": 6419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1942:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1942:53:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6426,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:53:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 6430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6428,
                          "name": "_devFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6416,
                          "src": "2013:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2023:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2013:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e5f464545",
                        "id": 6431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c2230950d369989352bc734ddf2b4ef1507863ed53418557d72feaa09b854d1",
                          "typeString": "literal_string \"Aura: FORBIDDEN_FEE\""
                        },
                        "value": "Aura: FORBIDDEN_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c2230950d369989352bc734ddf2b4ef1507863ed53418557d72feaa09b854d1",
                          "typeString": "literal_string \"Aura: FORBIDDEN_FEE\""
                        }
                      ],
                      "id": 6427,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2005:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:43:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6433,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6438,
                        "name": "_devFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6416,
                        "src": "2084:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6435,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6414,
                            "src": "2067:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6434,
                          "name": "AuraPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "2058:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        },
                        "id": 6436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2058:15:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AuraPair_$7530",
                          "typeString": "contract AuraPair"
                        }
                      },
                      "id": 6437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDevFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6677,
                      "src": "2058:25:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 6439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6440,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:34:25"
                }
              ]
            },
            "functionSelector": "ef0bc993",
            "id": 6442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDevFee",
            "nameLocation": "1883:9:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6414,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "1901:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6442,
                  "src": "1893:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6416,
                  "mutability": "mutable",
                  "name": "_devFee",
                  "nameLocation": "1914:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6442,
                  "src": "1908:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6415,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1892:30:25"
            },
            "returnParameters": {
              "id": 6418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1932:0:25"
            },
            "scope": 6466,
            "src": "1874:225:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6464,
              "nodeType": "Block",
              "src": "2170:116:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6450,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2188:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2188:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6452,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6225,
                          "src": "2202:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2188:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e",
                        "id": 6454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2215:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        },
                        "value": "Aura: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        }
                      ],
                      "id": 6449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2180:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:53:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6456,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:53:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6461,
                        "name": "_swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6446,
                        "src": "2270:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6458,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6444,
                            "src": "2252:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6457,
                          "name": "AuraPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "2243:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        },
                        "id": 6459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2243:15:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AuraPair_$7530",
                          "typeString": "contract AuraPair"
                        }
                      },
                      "id": 6460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6645,
                      "src": "2243:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 6462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2243:36:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6463,
                  "nodeType": "ExpressionStatement",
                  "src": "2243:36:25"
                }
              ]
            },
            "functionSelector": "9e68ceb8",
            "id": 6465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapFee",
            "nameLocation": "2118:10:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6444,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2137:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6465,
                  "src": "2129:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6446,
                  "mutability": "mutable",
                  "name": "_swapFee",
                  "nameLocation": "2151:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6465,
                  "src": "2144:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 6445,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2128:32:25"
            },
            "returnParameters": {
              "id": 6448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2170:0:25"
            },
            "scope": 6466,
            "src": "2109:177:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6467,
        "src": "152:2136:25",
        "usedErrors": []
      }
    ],
    "src": "30:2258:25"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/swaps/AuraFactory.sol",
    "exportedSymbols": {
      "AuraFactory": [
        6466
      ],
      "AuraLP": [
        7545
      ],
      "AuraPair": [
        7530
      ],
      "ERC20": [
        1489
      ],
      "ExtraMath": [
        3389
      ],
      "IAuraCallee": [
        2268
      ],
      "IERC20": [
        182
      ],
      "IUniswapV2Factory": [
        2254
      ],
      "Math": [
        495
      ],
      "ReentrancyGuard": [
        2031
      ],
      "TransferHelper": [
        2191
      ],
      "UQ112x112": [
        3433
      ]
    },
    "id": 6467,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6217,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "30:24:25"
      },
      {
        "absolutePath": "project:/contracts/swaps/AuraPair.sol",
        "file": "./AuraPair.sol",
        "id": 6218,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6467,
        "sourceUnit": 7531,
        "src": "56:24:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "id": 6219,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6467,
        "sourceUnit": 2255,
        "src": "81:69:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6220,
              "name": "IUniswapV2Factory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2254,
              "src": "176:17:25"
            },
            "id": 6221,
            "nodeType": "InheritanceSpecifier",
            "src": "176:17:25"
          }
        ],
        "canonicalName": "AuraFactory",
        "contractDependencies": [
          7530
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6466,
        "linearizedBaseContracts": [
          6466,
          2254
        ],
        "name": "AuraFactory",
        "nameLocation": "161:11:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2208
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 6223,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "215:5:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "200:20:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6222,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "200:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2213
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 6225,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "241:11:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "226:26:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6224,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "226:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "257671f5",
            "id": 6236,
            "mutability": "mutable",
            "name": "INIT_CODE_HASH",
            "nameLocation": "273:14:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "258:88:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6226,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "258:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 6231,
                            "name": "AuraPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7530,
                            "src": "322:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                              "typeString": "type(contract AuraPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                              "typeString": "type(contract AuraPair)"
                            }
                          ],
                          "id": 6230,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "317:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 6232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "317:14:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_AuraPair_$7530",
                          "typeString": "type(contract AuraPair)"
                        }
                      },
                      "id": 6233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "317:27:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 6228,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "300:3:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "300:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6234,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "300:45:25",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6227,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "290:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6235,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "290:56:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2222
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 6242,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "408:7:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "353:62:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 6241,
              "keyType": {
                "id": 6237,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "361:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "353:47:25",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 6240,
                "keyType": {
                  "id": 6238,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "380:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "372:27:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 6239,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "391:7:25",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2229
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 6245,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "438:8:25",
            "nodeType": "VariableDeclaration",
            "scope": 6466,
            "src": "421:25:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 6243,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "421:7:25",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 6244,
              "nodeType": "ArrayTypeName",
              "src": "421:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6254,
              "nodeType": "Block",
              "src": "487:43:25",
              "statements": [
                {
                  "expression": {
                    "id": 6252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6250,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6225,
                      "src": "497:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6251,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6247,
                      "src": "511:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "497:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6253,
                  "nodeType": "ExpressionStatement",
                  "src": "497:26:25"
                }
              ]
            },
            "id": 6255,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6247,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "473:12:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6255,
                  "src": "465:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "464:22:25"
            },
            "returnParameters": {
              "id": 6249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:25"
            },
            "scope": 6466,
            "src": "453:77:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2234
            ],
            "body": {
              "id": 6263,
              "nodeType": "Block",
              "src": "591:39:25",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 6260,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6245,
                      "src": "608:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 6261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "608:15:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6259,
                  "id": 6262,
                  "nodeType": "Return",
                  "src": "601:22:25"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 6264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "545:14:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:25"
            },
            "returnParameters": {
              "id": 6259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6258,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6264,
                  "src": "585:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6257,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:6:25"
            },
            "scope": 6466,
            "src": "536:94:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2243
            ],
            "body": {
              "id": 6375,
              "nodeType": "Block",
              "src": "720:838:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6274,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6266,
                          "src": "738:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6275,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6268,
                          "src": "748:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "738:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a204944454e544943414c5f414444524553534553",
                        "id": 6277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "756:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b28028472bd1f9ef1c0d3f3724d20c9416c0dcac1d9e9f482fff705b22736b7",
                          "typeString": "literal_string \"Aura: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Aura: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b28028472bd1f9ef1c0d3f3724d20c9416c0dcac1d9e9f482fff705b22736b7",
                          "typeString": "literal_string \"Aura: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 6273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "730:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:54:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6279,
                  "nodeType": "ExpressionStatement",
                  "src": "730:54:25"
                },
                {
                  "assignments": [
                    6281,
                    6283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6281,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "803:6:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 6375,
                      "src": "795:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6280,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "795:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6283,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "819:6:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 6375,
                      "src": "811:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6282,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "811:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6294,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6284,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6266,
                        "src": "829:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 6285,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6268,
                        "src": "838:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "829:15:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 6290,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6268,
                          "src": "867:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6291,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6266,
                          "src": "875:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 6292,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "866:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 6293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "829:53:25",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 6287,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6266,
                          "src": "848:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6288,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6268,
                          "src": "856:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 6289,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "847:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "794:88:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6296,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6281,
                          "src": "900:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "918:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "910:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6297,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "910:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "910:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "900:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a205a45524f5f41444452455353",
                        "id": 6302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "922:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5089616d07043e3ff613f536a9aef1a6723463cbd531c86b7e1b7803d13a38f",
                          "typeString": "literal_string \"Aura: ZERO_ADDRESS\""
                        },
                        "value": "Aura: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5089616d07043e3ff613f536a9aef1a6723463cbd531c86b7e1b7803d13a38f",
                          "typeString": "literal_string \"Aura: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 6295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "892:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "892:51:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6304,
                  "nodeType": "ExpressionStatement",
                  "src": "892:51:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 6306,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6242,
                              "src": "961:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 6308,
                            "indexExpression": {
                              "id": 6307,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6281,
                              "src": "969:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "961:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 6310,
                          "indexExpression": {
                            "id": 6309,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6283,
                            "src": "977:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "961:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "996:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "988:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6311,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "988:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "988:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "961:37:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20504149525f455849535453",
                        "id": 6316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1000:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57c4b049a0561a69e89c4b6d10b8ca2ce5e7399fb8d148e96116043bb6dabb56",
                          "typeString": "literal_string \"Aura: PAIR_EXISTS\""
                        },
                        "value": "Aura: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57c4b049a0561a69e89c4b6d10b8ca2ce5e7399fb8d148e96116043bb6dabb56",
                          "typeString": "literal_string \"Aura: PAIR_EXISTS\""
                        }
                      ],
                      "id": 6305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "953:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:67:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6318,
                  "nodeType": "ExpressionStatement",
                  "src": "953:67:25"
                },
                {
                  "assignments": [
                    6320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6320,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1073:8:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 6375,
                      "src": "1060:21:25",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 6319,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1060:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6325,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6322,
                          "name": "AuraPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "1089:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        ],
                        "id": 6321,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1084:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1084:14:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_AuraPair_$7530",
                        "typeString": "type(contract AuraPair)"
                      }
                    },
                    "id": 6324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1084:27:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1060:51:25"
                },
                {
                  "assignments": [
                    6327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6327,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1129:4:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 6375,
                      "src": "1121:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6326,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1121:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6335,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6331,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6281,
                            "src": "1163:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6332,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6283,
                            "src": "1171:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6329,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1146:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1146:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:32:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6328,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1136:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:43:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1121:58:25"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1198:84:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1212:60:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1228:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1235:8:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1245:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1231:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1231:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1256:8:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1250:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1250:15:25"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1267:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1220:7:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1220:52:25"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1212:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6320,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1235:8:25",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6320,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1256:8:25",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6271,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1212:4:25",
                      "valueSize": 1
                    },
                    {
                      "declaration": 6327,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1267:4:25",
                      "valueSize": 1
                    }
                  ],
                  "id": 6336,
                  "nodeType": "InlineAssembly",
                  "src": "1189:93:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6341,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6281,
                        "src": "1317:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6342,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6283,
                        "src": "1325:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6338,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6271,
                            "src": "1300:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6337,
                          "name": "AuraPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "1291:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        },
                        "id": 6339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1291:14:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AuraPair_$7530",
                          "typeString": "contract AuraPair"
                        }
                      },
                      "id": 6340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6613,
                      "src": "1291:25:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 6343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6344,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:41:25"
                },
                {
                  "expression": {
                    "id": 6351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6345,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6242,
                          "src": "1342:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 6348,
                        "indexExpression": {
                          "id": 6346,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6281,
                          "src": "1350:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1342:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6349,
                      "indexExpression": {
                        "id": 6347,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6283,
                        "src": "1358:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1342:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6350,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6271,
                      "src": "1368:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1342:30:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6352,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:30:25"
                },
                {
                  "expression": {
                    "id": 6359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6353,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6242,
                          "src": "1382:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 6356,
                        "indexExpression": {
                          "id": 6354,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6283,
                          "src": "1390:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1382:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6357,
                      "indexExpression": {
                        "id": 6355,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6281,
                        "src": "1398:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1382:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6358,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6271,
                      "src": "1408:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1382:30:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6360,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6364,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6271,
                        "src": "1481:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6361,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6245,
                        "src": "1467:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 6363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1467:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 6365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:19:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6366,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:19:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6368,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6281,
                        "src": "1513:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6369,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6283,
                        "src": "1521:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6370,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6271,
                        "src": "1529:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6371,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6245,
                          "src": "1535:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1535:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6367,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2203,
                      "src": "1501:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 6373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:50:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6374,
                  "nodeType": "EmitStatement",
                  "src": "1496:55:25"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 6376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "645:10:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6266,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "664:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6376,
                  "src": "656:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6268,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "680:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6376,
                  "src": "672:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:32:25"
            },
            "returnParameters": {
              "id": 6272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6271,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "714:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6376,
                  "src": "706:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:14:25"
            },
            "scope": 6466,
            "src": "636:922:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2248
            ],
            "body": {
              "id": 6393,
              "nodeType": "Block",
              "src": "1607:94:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6382,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1625:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1625:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6384,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6225,
                          "src": "1639:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1625:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e",
                        "id": 6386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1652:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        },
                        "value": "Aura: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        }
                      ],
                      "id": 6381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1617:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:53:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6388,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:53:25"
                },
                {
                  "expression": {
                    "id": 6391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6389,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6223,
                      "src": "1680:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6390,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6378,
                      "src": "1688:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1680:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6392,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:14:25"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 6394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1573:8:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6378,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1590:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6394,
                  "src": "1582:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1581:16:25"
            },
            "returnParameters": {
              "id": 6380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1607:0:25"
            },
            "scope": 6466,
            "src": "1564:137:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2253
            ],
            "body": {
              "id": 6411,
              "nodeType": "Block",
              "src": "1762:106:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6400,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1780:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1780:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6402,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6225,
                          "src": "1794:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1780:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e",
                        "id": 6404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1807:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        },
                        "value": "Aura: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        }
                      ],
                      "id": 6399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1772:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:53:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6406,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:53:25"
                },
                {
                  "expression": {
                    "id": 6409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6407,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6225,
                      "src": "1835:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6408,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6396,
                      "src": "1849:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1835:26:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6410,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:26:25"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 6412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1716:14:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6396,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1739:12:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6412,
                  "src": "1731:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:22:25"
            },
            "returnParameters": {
              "id": 6398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1762:0:25"
            },
            "scope": 6466,
            "src": "1707:161:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6441,
              "nodeType": "Block",
              "src": "1932:167:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6420,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1950:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1950:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6422,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6225,
                          "src": "1964:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1950:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e",
                        "id": 6424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1977:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        },
                        "value": "Aura: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        }
                      ],
                      "id": 6419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1942:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1942:53:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6426,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:53:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 6430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6428,
                          "name": "_devFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6416,
                          "src": "2013:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2023:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2013:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e5f464545",
                        "id": 6431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:21:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c2230950d369989352bc734ddf2b4ef1507863ed53418557d72feaa09b854d1",
                          "typeString": "literal_string \"Aura: FORBIDDEN_FEE\""
                        },
                        "value": "Aura: FORBIDDEN_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c2230950d369989352bc734ddf2b4ef1507863ed53418557d72feaa09b854d1",
                          "typeString": "literal_string \"Aura: FORBIDDEN_FEE\""
                        }
                      ],
                      "id": 6427,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2005:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:43:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6433,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6438,
                        "name": "_devFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6416,
                        "src": "2084:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6435,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6414,
                            "src": "2067:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6434,
                          "name": "AuraPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "2058:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        },
                        "id": 6436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2058:15:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AuraPair_$7530",
                          "typeString": "contract AuraPair"
                        }
                      },
                      "id": 6437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDevFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6677,
                      "src": "2058:25:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 6439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6440,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:34:25"
                }
              ]
            },
            "functionSelector": "ef0bc993",
            "id": 6442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDevFee",
            "nameLocation": "1883:9:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6414,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "1901:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6442,
                  "src": "1893:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6416,
                  "mutability": "mutable",
                  "name": "_devFee",
                  "nameLocation": "1914:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6442,
                  "src": "1908:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6415,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1892:30:25"
            },
            "returnParameters": {
              "id": 6418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1932:0:25"
            },
            "scope": 6466,
            "src": "1874:225:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6464,
              "nodeType": "Block",
              "src": "2170:116:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6450,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2188:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2188:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6452,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6225,
                          "src": "2202:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2188:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417572613a20464f5242494444454e",
                        "id": 6454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2215:17:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        },
                        "value": "Aura: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5aa2b6e12398807bb3970f1a6a279f10854ecda8ddf1f0cdc15971d812e93c5",
                          "typeString": "literal_string \"Aura: FORBIDDEN\""
                        }
                      ],
                      "id": 6449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2180:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:53:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6456,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:53:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6461,
                        "name": "_swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6446,
                        "src": "2270:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6458,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6444,
                            "src": "2252:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6457,
                          "name": "AuraPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "2243:8:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AuraPair_$7530_$",
                            "typeString": "type(contract AuraPair)"
                          }
                        },
                        "id": 6459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2243:15:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AuraPair_$7530",
                          "typeString": "contract AuraPair"
                        }
                      },
                      "id": 6460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6645,
                      "src": "2243:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 6462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2243:36:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6463,
                  "nodeType": "ExpressionStatement",
                  "src": "2243:36:25"
                }
              ]
            },
            "functionSelector": "9e68ceb8",
            "id": 6465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapFee",
            "nameLocation": "2118:10:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6444,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "2137:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6465,
                  "src": "2129:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6446,
                  "mutability": "mutable",
                  "name": "_swapFee",
                  "nameLocation": "2151:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 6465,
                  "src": "2144:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 6445,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2128:32:25"
            },
            "returnParameters": {
              "id": 6448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2170:0:25"
            },
            "scope": 6466,
            "src": "2109:177:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6467,
        "src": "152:2136:25",
        "usedErrors": []
      }
    ],
    "src": "30:2258:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-31T06:20:46.925Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}