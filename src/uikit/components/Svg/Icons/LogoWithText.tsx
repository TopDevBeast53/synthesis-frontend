import React from "react";
import { SvgProps } from "../types";

interface LogoProps extends SvgProps {
  isDark: boolean;
}

const Logo: React.FC<LogoProps> = ({ isDark, ...props }) => {
  const textColor = isDark ? "#FFFFFF" : "#000000";
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="167" height="63" viewBox="0 0 167 63" fill="none" {...props}>
    <path d="M76.4799 44.4873H81.9446L83.6918 38.8367H93.2829L95.0673 44.4873H100.681L91.3127 17.9072H85.7364L76.4799 44.4873ZM87.3349 27.0523C87.781 25.6396 88.4502 22.963 88.4502 22.963H88.5245C88.5245 22.963 89.1565 25.6396 89.6026 27.0523L91.9818 34.7103H84.9557L87.3349 27.0523ZM119.251 44.4873V25.4166H114.195V36.4203C114.195 38.9482 112.745 40.7326 110.366 40.7326C108.21 40.7326 107.206 39.5059 107.206 37.2754V25.4166H102.187V38.1304C102.187 42.294 104.567 45.0078 108.805 45.0078C111.481 45.0078 112.968 44.004 114.269 42.2568H114.381V44.4873H119.251ZM127.763 25.4166H122.893V44.4873H127.949V35.1936C127.949 31.1787 130.328 29.4315 133.636 29.766H133.748V25.3422C133.45 25.2307 133.116 25.1935 132.558 25.1935C130.328 25.1935 129.027 26.3088 127.874 28.4649H127.763V25.4166ZM147.76 44.4873H152.63V44.3014C152.184 43.9669 151.961 43.1118 151.961 41.662V31.9594C151.961 27.4984 149.656 24.9333 143.931 24.9333C138.355 24.9333 135.864 27.8701 135.716 31.2159H140.214C140.363 29.3943 141.515 28.5393 143.894 28.5393C146.013 28.5393 147.091 29.4315 147.091 30.8069C147.091 32.2568 145.641 32.517 142.482 32.9631C138.244 33.5579 134.824 34.8962 134.824 39.0969C134.824 42.8888 137.575 44.9334 141.478 44.9334C144.749 44.9334 146.125 43.8182 147.091 42.3683H147.166C147.277 43.2234 147.463 44.1156 147.76 44.4873ZM142.705 41.4018C140.92 41.4018 139.731 40.7698 139.731 38.9854C139.731 37.201 141.032 36.6062 143.671 36.0114C144.935 35.714 146.311 35.4166 147.203 34.8962V37.7586C147.203 39.6174 145.604 41.4018 142.705 41.4018Z" fill="#ABBEFF"/>
    <g filter="url(#filter0_d_3_1257)">
    <rect x="8" y="8" width="47" height="47" rx="7.18326" fill="#ABBEFF"/>
    </g>
    <path d="M46.4857 32.001H32.8246C32.7574 32.0011 32.6918 32.0215 32.6361 32.0595C32.5805 32.0975 32.5373 32.1513 32.5122 32.2142C32.487 32.2771 32.481 32.3461 32.4948 32.4125C32.5087 32.4788 32.5419 32.5395 32.5901 32.5867L39.285 39.1296C39.3334 39.1767 39.3667 39.2373 39.3806 39.3036C39.3946 39.37 39.3886 39.439 39.3634 39.5019C39.3382 39.5648 39.2949 39.6186 39.2392 39.6565C39.1834 39.6943 39.1177 39.7145 39.0505 39.7144H25.0516C24.8727 39.7144 24.7011 39.6426 24.5746 39.5149C24.4481 39.3871 24.377 39.2139 24.377 39.0333V24.9686C24.377 24.8792 24.3944 24.7906 24.4283 24.708C24.4622 24.6254 24.5119 24.5503 24.5746 24.487C24.6372 24.4238 24.7116 24.3736 24.7934 24.3394C24.8753 24.3052 24.963 24.2876 25.0516 24.2876H39.0515C39.1187 24.2874 39.1843 24.267 39.24 24.229C39.2956 24.191 39.3388 24.1372 39.364 24.0743C39.3891 24.0114 39.3951 23.9424 39.3813 23.876C39.3674 23.8097 39.3342 23.749 39.286 23.7018L32.4947 17.0556C32.3682 16.928 32.1967 16.8563 32.0178 16.8563C31.8389 16.8563 31.6674 16.928 31.5409 17.0556L17.2141 31.5195C17.0876 31.6472 17.0166 31.8204 17.0166 32.001C17.0166 32.1815 17.0876 32.3547 17.2141 32.4824L31.5409 46.9463C31.6674 47.0739 31.8389 47.1456 32.0178 47.1456C32.1967 47.1456 32.3682 47.0739 32.4947 46.9463L46.7241 32.5827C46.7712 32.535 46.8032 32.4743 46.8162 32.4083C46.8292 32.3422 46.8225 32.2738 46.797 32.2116C46.7715 32.1494 46.7283 32.0962 46.6729 32.0587C46.6175 32.0212 46.5524 32.0011 46.4857 32.001Z" fill={textColor}/>
    <defs>
    <filter id="filter0_d_3_1257" x="0.816744" y="0.816744" width="61.3665" height="61.3665" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
    <feFlood floodOpacity="0" result="BackgroundImageFix"/>
    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
    <feOffset/>
    <feGaussianBlur stdDeviation="3.59163"/>
    <feComposite in2="hardAlpha" operator="out"/>
    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0"/>
    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_3_1257"/>
    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_3_1257" result="shape"/>
    </filter>
    </defs>
    </svg>
  );
};

export default React.memo(Logo, (prev, next) => prev.isDark === next.isDark);
